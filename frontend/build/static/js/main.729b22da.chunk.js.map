{"version":3,"sources":["constants/userConstants.js","actions/userActions.js","components/layout/Search.js","components/layout/Header.js","components/layout/Footer.js","components/layout/MetaData.js","components/product/Product.js","components/layout/Loader.js","constants/productConstants.js","actions/productActions.js","components/Home.js","components/review/ListReviews.js","constants/cartConstants.js","actions/cartActions.js","components/product/ProductDetails.js","components/cart/Cart.js","components/cart/CheckoutSteps.js","components/cart/Shipping.js","components/cart/ConfirmOrder.js","constants/orderConstants.js","actions/orderActions.js","components/cart/Payment.js","components/cart/OrderSuccess.js","components/order/ListOrders.js","components/order/OrderDetails.js","components/user/Login.js","components/user/Register.js","components/user/Profile.js","components/user/UpdateProfile.js","components/user/UpdatePassword.js","components/user/ForgotPassword.js","components/user/NewPassword.js","components/admin/Sidebar.js","components/admin/Dashboard.js","components/admin/ProductsList.js","components/admin/NewProduct.js","components/admin/UpdateProduct.js","components/admin/OrdersList.js","components/admin/ProcessOrder.js","components/admin/UsersList.js","components/admin/UpdateUser.js","components/admin/ProductReviews.js","components/route/ProtectedRoute.js","store.js","reducers/productReducers.js","reducers/userReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","App.js","index.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAIL","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_RESET","UPDATE_PROFILE_FAIL","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_RESET","UPDATE_PASSWORD_FAIL","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAIL","NEW_PASSWORD_REQUEST","NEW_PASSWORD_SUCCESS","NEW_PASSWORD_FAIL","ALL_USERS_REQUEST","ALL_USERS_SUCCESS","ALL_USERS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_RESET","UPDATE_USER_FAIL","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_RESET","DELETE_USER_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","CLEAR_ERRORS","loadUser","dispatch","a","type","axios","get","data","payload","user","response","message","allUsers","users","clearErrors","Search","history","useState","keyword","setKeyword","onSubmit","e","preventDefault","trim","push","className","id","placeholder","onChange","target","value","Header","alert","useAlert","useDispatch","useSelector","state","auth","loading","cartItems","cart","to","src","render","style","textDecoration","length","avatar","url","alt","name","role","onClick","success","Footer","MetaData","title","Helmet","Product","product","col","images","_id","width","ratings","numOfReviews","price","loader","ADMIN_PRODUCTS_REQUEST","ADMIN_PRODUCTS_SUCCESS","ADMIN_PRODUCTS_FAIL","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_RESET","NEW_PRODUCT_FAIL","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_RESET","DELETE_PRODUCT_FAIL","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_RESET","UPDATE_PRODUCT_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_RESET","NEW_REVIEW_FAIL","GET_REVIEWS_REQUEST","GET_REVIEWS_SUCCESS","GET_REVIEWS_FAIL","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_RESET","DELETE_REVIEW_FAIL","getProductDetails","getAdminProducts","products","getProductReviews","reviews","Range","createSliderWithTooltip","Slider","Home","match","currentPage","setCurrentPage","setPrice","category","setCategory","error","productsCount","resPerPage","filteredProductsCount","params","useEffect","rating","link","getProducts","count","Loader","marks","min","max","defaultValue","tipFormatter","tipProps","placement","visible","map","cursor","listStyleType","activePage","itemsCountPerPage","totalItemsCount","pageNumber","nextPageText","prevPageText","firstPageText","lastPageText","itemClass","linkClass","ListReviews","class","review","comment","ADD_TO_CART","REMOVE_ITEM_CART","SAVE_SHIPPING_INFO","addItemToCart","quantity","getState","image","stock","localStorage","setItem","JSON","stringify","ProductDetails","setQuantity","setRating","setComment","productDetails","newReview","reviewError","Carousel","pause","Item","public_id","document","querySelector","valueAsNumber","qty","readOnly","disabled","description","seller","stars","querySelectorAll","showRatings","forEach","star","index","starValue","classList","add","remove","addEventListener","tabIndex","reviewData","formData","FormData","set","config","headers","put","Cart","removeCartItemHandler","removeItemFromCart","item","height","newQty","decreaseQty","increaseQty","reduce","acc","Number","toFixed","CheckoutSteps","shipping","confirmOrder","payment","Shipping","countriesList","Object","values","countries","shippingInfo","address","setAddress","city","setCity","postalCode","setPostalCode","phoneNo","setPhoneNo","country","setCountry","htmlFor","required","ConfirmOrder","itemsPrice","shippingPrice","taxPrice","totalPrice","sessionStorage","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_RESET","UPDATE_ORDER_FAIL","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_RESET","DELETE_ORDER_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","createOrder","order","post","getOrderDetails","allOrders","options","base","fontSize","invalid","color","Payment","stripe","useStripe","elements","useElements","newOrder","orderItems","orderInfo","parse","getItem","paymentData","amount","Math","round","submitHandler","res","clientSecret","client_secret","console","log","confirmCardPayment","payment_method","card","getElement","CardNumberElement","billing_details","email","result","paymentIntent","status","paymentInfo","OrderSuccess","ListOrders","myOrders","orders","columns","label","field","sort","rows","numOfItems","orderStatus","String","includes","actions","setOrders","bordered","striped","hover","OrderDetails","orderDetails","shippingDetails","isPaid","Login","location","setEmail","password","setPassword","isAuthenticated","redirect","search","split","login","Register","setUser","setAvatar","avatarPreview","setAvatarPreview","reader","FileReader","onload","readyState","readAsDataURL","files","userData","encType","accept","Profile","createdAt","substring","UpdateProfile","setName","isUpdated","UpdatePassword","oldPassword","setOldPassword","passwords","for","ForgotPassword","forgotPassword","NewPassword","confirmPassword","setConfirmPassword","token","Sidebar","href","Dashboard","totalAmount","outOfStock","ProductsList","deleteError","isDeleted","deleteProductHandler","delete","deleteProduct","setProducts","NewProduct","setDescription","setStock","setSeller","setImages","imagesPreview","setImagesPreview","newProduct","productData","append","Array","from","file","oldArray","multiple","img","UpdateProduct","oldImages","setOldImages","updateError","productId","OrdersList","deleteOrderHandler","deleteOrder","numofItems","ProcessOrder","setStatus","orderId","updateOrderHandler","orderData","updateOrder","UsersList","deleteUserHandler","deleteUser","setUsers","UpdateUser","setRole","userDetails","userId","ProductReviews","setProductId","productReviews","deleteReviewHandler","deleteReview","setReviews","ProtectedRoute","isAdmin","Component","component","rest","props","reducer","combineReducers","action","isItemExist","find","i","filter","initialState","middlware","thunk","store","createStore","composeWithDevTools","applyMiddleware","App","stripeApiKey","setStripeApiKey","getStripApiKey","path","exact","loadStripe","timeout","position","positions","BOTTOM_CENTER","transition","transitions","SCALE","ReactDOM","template","AlertTemplate","getElementById"],"mappings":"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","file":"static/js/main.729b22da.chunk.js","sourcesContent":["export const LOGIN_REQUEST = 'LOGIN_REQUEST'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\n\r\nexport const REGISTER_USER_REQUEST = 'REGISTER_USER_REQUEST'\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS'\r\nexport const REGISTER_USER_FAIL = 'REGISTER_USER_FAIL'\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST'\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS'\r\nexport const LOAD_USER_FAIL = 'LOAD_USER_FAIL'\r\n\r\nexport const UPDATE_PROFILE_REQUEST = 'UPDATE_PROFILE_REQUEST'\r\nexport const UPDATE_PROFILE_SUCCESS = 'UPDATE_PROFILE_SUCCESS'\r\nexport const UPDATE_PROFILE_RESET = 'UPDATE_PROFILE_RESET'\r\nexport const UPDATE_PROFILE_FAIL = 'UPDATE_PROFILE_FAIL'\r\n\r\nexport const UPDATE_PASSWORD_REQUEST = 'UPDATE_PASSWORD_REQUEST'\r\nexport const UPDATE_PASSWORD_SUCCESS = 'UPDATE_PASSWORD_SUCCESS'\r\nexport const UPDATE_PASSWORD_RESET = 'UPDATE_PASSWORD_RESET'\r\nexport const UPDATE_PASSWORD_FAIL = 'UPDATE_PASSWORD_FAIL'\r\n\r\nexport const FORGOT_PASSWORD_REQUEST = 'FORGOT_PASSWORD_REQUEST'\r\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS'\r\nexport const FORGOT_PASSWORD_FAIL = 'FORGOT_PASSWORD_FAIL'\r\n\r\nexport const NEW_PASSWORD_REQUEST = 'NEW_PASSWORD_REQUEST'\r\nexport const NEW_PASSWORD_SUCCESS = 'NEW_PASSWORD_SUCCESS'\r\nexport const NEW_PASSWORD_FAIL = 'NEW_PASSWORD_FAIL'\r\n\r\nexport const ALL_USERS_REQUEST = 'ALL_USERS_REQUEST'\r\nexport const ALL_USERS_SUCCESS = 'ALL_USERS_SUCCESS'\r\nexport const ALL_USERS_FAIL = 'ALL_USERS_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\n\r\nexport const UPDATE_USER_REQUEST = 'UPDATE_USER_REQUEST'\r\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS'\r\nexport const UPDATE_USER_RESET = 'UPDATE_USER_RESET'\r\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL'\r\n\r\nexport const DELETE_USER_REQUEST = 'DELETE_USER_REQUEST'\r\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS'\r\nexport const DELETE_USER_RESET = 'DELETE_USER_RESET'\r\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL'\r\n\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\r\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL'\r\n\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'","import axios from 'axios'\r\nimport {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAIL,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAIL,\r\n    UPDATE_PROFILE_REQUEST,\r\n    UPDATE_PROFILE_SUCCESS,\r\n    UPDATE_PROFILE_FAIL,\r\n    UPDATE_PASSWORD_REQUEST,\r\n    UPDATE_PASSWORD_SUCCESS,\r\n    UPDATE_PASSWORD_FAIL,\r\n    FORGOT_PASSWORD_REQUEST,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_FAIL,\r\n    NEW_PASSWORD_REQUEST,\r\n    NEW_PASSWORD_SUCCESS,\r\n    NEW_PASSWORD_FAIL,\r\n    ALL_USERS_REQUEST,\r\n    ALL_USERS_SUCCESS,\r\n    ALL_USERS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    UPDATE_USER_REQUEST,\r\n    UPDATE_USER_SUCCESS,\r\n    UPDATE_USER_FAIL,\r\n    DELETE_USER_REQUEST,\r\n    DELETE_USER_SUCCESS,\r\n    DELETE_USER_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/userConstants'\r\n\r\n// Login\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: LOGIN_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/login', { email, password }, config)\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Register user\r\nexport const register = (userData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: REGISTER_USER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/register', userData, config)\r\n\r\n        dispatch({\r\n            type: REGISTER_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REGISTER_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Load user\r\nexport const loadUser = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: LOAD_USER_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/v1/me')\r\n\r\n        dispatch({\r\n            type: LOAD_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOAD_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Update profile\r\nexport const updateProfile = (userData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_PROFILE_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/v1/me/update', userData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PROFILE_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Update password\r\nexport const updatePassword = (passwords) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_PASSWORD_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/v1/password/update', passwords, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PASSWORD_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Forgot password\r\nexport const forgotPassword = (email) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: FORGOT_PASSWORD_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/password/forgot', email, config)\r\n\r\n        dispatch({\r\n            type: FORGOT_PASSWORD_SUCCESS,\r\n            payload: data.message\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: FORGOT_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Reset password\r\nexport const resetPassword = (token, passwords) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_PASSWORD_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/password/reset/${token}`, passwords, config)\r\n\r\n        dispatch({\r\n            type: NEW_PASSWORD_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Logout user\r\nexport const logout = () => async (dispatch) => {\r\n    try {\r\n\r\n        await axios.get('/api/v1/logout')\r\n\r\n        dispatch({\r\n            type: LOGOUT_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGOUT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get all users\r\nexport const allUsers = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ALL_USERS_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/v1/admin/users')\r\n\r\n        dispatch({\r\n            type: ALL_USERS_SUCCESS,\r\n            payload: data.users\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_USERS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Update user - ADMIN\r\nexport const updateUser = (id, userData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_USER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/admin/user/${id}`, userData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get user details - ADMIN\r\nexport const getUserDetails = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: USER_DETAILS_REQUEST })\r\n\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/user/${id}`)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Delete user - ADMIN\r\nexport const deleteUser = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_USER_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/admin/user/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_USER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}","import React, { useState } from 'react'\r\n\r\nconst Search = ({ history }) => {\r\n\r\n    const [keyword, setKeyword] = useState('');\r\n\r\n    const searchHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={searchHandler} >\r\n            <div className=\"input-group\">\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"search_field\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter Product Name ...\"\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                    <button id=\"search_btn\" className=\"btn\">\r\n                        <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search\r\n\r\n// import React, { useState } from 'react'\r\n\r\n// const Search = ({ history }) => {\r\n\r\n//     const [keyword, setKeyword ] = useState('');\r\n\r\n//     const searchHandler = (e) => {\r\n//         e.preventDefault()\r\n\r\n\r\n//         if(keyword.trim()) {\r\n//             history.push(`./search/${keyword}`)\r\n//         } else {\r\n//             history.push('/')\r\n//         }\r\n\r\n//     }\r\n//     return (\r\n        \r\n//             <form onSubmit={searchHandler} >\r\n//                 <div ClassName=\"input-group\">\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             id=\"search_field\"\r\n//                             className=\"form-control\" \r\n//                             placeholder=\"Enter Product Name ...\"\r\n//                             onChange={(e) => setKeyword(e.target.value)}\r\n//                         />\r\n//                         <div className=\"input-group-append\">\r\n//                             <button id=\"search_btn\" className=\"btn\">\r\n//                                 <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n//                             </button>\r\n//                         </div>\r\n//                     </div>\r\n//             </form>\r\n        \r\n//     )\r\n// }\r\n\r\n// export default Search\r\n","import React, { Fragment } from 'react'\r\nimport { Route, Link } from 'react-router-dom'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert'\r\nimport { logout } from '../../actions/userActions'\r\n\r\nimport Search from './Search'\r\n\r\nimport '../../App.css'\r\n\r\nconst Header = () => {\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user, loading } = useSelector(state => state.auth)\r\n    const { cartItems } = useSelector(state => state.cart)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n        alert.success('Logged out successfully.')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <nav className=\"navbar row\">\r\n                <div className=\"col-12 col-md-3\">\r\n                    <div className=\"navbar-brand\">\r\n                        <Link to=\"/\">\r\n                            <img src=\"/images/shopit_logo.png\" />\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\r\n                    <Route render={({ history }) => <Search history={history} />} />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\r\n                    <Link to=\"/cart\" style={{ textDecoration: 'none' }} >\r\n                        <span id=\"cart\" className=\"ml-3\">Cart</span>\r\n                        <span className=\"ml-1\" id=\"cart_count\">{cartItems.length}</span>\r\n                    </Link>\r\n\r\n                    \r\n\r\n                    {user ? (\r\n                        <div className=\"ml-4 dropdown d-inline\">\r\n                            <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\" \r\n                            type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" \r\n                            aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\r\n                                <figure className=\"avatar avatar-nav\">\r\n                                    <img\r\n                                        src={user.avatar && user.avatar.url}\r\n                                        alt={user && user.name}\r\n                                        className=\"rounded-circle\"\r\n                                    />\r\n                                </figure>\r\n                                <span>{user && user.name}</span>\r\n                            </Link>\r\n\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\r\n\r\n                                {user && user.role === 'admin' && (\r\n                                    <Link className=\"dropdown-item\" to=\"/dashboard\">Dashboard</Link>\r\n                                )}\r\n                                <Link className=\"dropdown-item\" to=\"/orders/me\">Orders</Link>\r\n                                <Link className=\"dropdown-item\" to=\"/me\">Profile</Link>                                \r\n                                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\r\n                                    Logout\r\n                                </Link>\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                    ) : !loading && <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">Login</Link>}\r\n\r\n\r\n                </div>\r\n            </nav>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { Fragment } from 'react'\r\n// import { Route, Link } from 'react-router-dom'\r\n\r\n// import Search from './Search'\r\n\r\n// import '../../App.css'\r\n \r\n// const Header = () => {\r\n//     return (\r\n//         <Fragment>\r\n//             <nav className=\"navbar row\">\r\n//                 <div className=\"col-12 col-md-3\">\r\n//                     <div className=\"navbar-brand\">\r\n//                         <Link to=\"/\">\r\n//                         <img src=\"/images/shopit_logo.png\" alt=\"logo\" />\r\n//                         </Link>\r\n//                     </div>\r\n//                 </div>\r\n\r\n//                 <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\r\n//                     <Route render={({ history }) => <Search history={history} />} />\r\n                    \r\n//                 </div> \r\n\r\n//                 <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\r\n//                     <Link to=\"/login\" className=\"btn\" id=\"login_btn\">Login</Link>\r\n\r\n//                     <span id=\"cart\" className=\"ml-3\">Cart</span>\r\n//                     <span className=\"ml-1\" id=\"cart_count\">2</span>\r\n//                 </div>\r\n\r\n\r\n\r\n//             </nav>\r\n//         </Fragment>\r\n//     )\r\n// }\r\n\r\n// export default Header\r\n","import React, { Fragment } from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <Fragment>\r\n            <footer className=\"py-1\">\r\n                <p className=\"text-center mt-1\">\r\n                    Shopping Cart - 2021, All Rights Reserved\r\n                </p>\r\n            </footer>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst MetaData = ({title}) => {\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>{`${title} - ShopIT`} </title>\r\n            </Helmet>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MetaData\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Product = ({ product, col }) => {\r\n    return (\r\n        <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\r\n            <div className=\"card p-3 rounded\">\r\n                <img\r\n                    className=\"card-img-top mx-auto\"\r\n                    src={product.images[0].url}\r\n                />\r\n                <div className=\"card-body d-flex flex-column\">\r\n                    <h5 className=\"card-title\">\r\n                        <Link to={`/product/${product._id}`}>{product.name}</Link>\r\n                    </h5>\r\n                    <div className=\"ratings mt-auto\">\r\n                        <div className=\"rating-outer\">\r\n                            <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\r\n                        </div>\r\n                        <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\r\n                    </div>\r\n                    <p className=\"card-text\">${product.price}</p>\r\n                    <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\n// const Product = ({ product, col }) => {\r\n//     return (\r\n//         <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\r\n//                     <div className=\"card p-3 rounded\">\r\n//                         <img\r\n//                         className=\"card-img-top mx-auto\"\r\n//                         src={product.images[0].url}\r\n//                         />\r\n//                         <div className=\"card-body d-flex flex-column\">\r\n//                             <h5 className=\"card-title\">\r\n//                                 <Link to={`/product/${product._id}`}>{product.name} </Link>\r\n//                             </h5>\r\n//                             <div className=\"ratings mt-auto\">\r\n//                                 <div className=\"rating-outer\">\r\n//                                     <div className=\"rating-inner\" style={{ width:`${(product.rating / 5) * 100}%`}}></div>\r\n//                                 </div>\r\n//                                 <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\r\n//                             </div>\r\n//                             <p className=\"card-text\">{product.price}</p>\r\n//                             <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\r\n//                         </div>\r\n//                     </div>\r\n                    \r\n//                 </div>\r\n//     )\r\n// }\r\n\r\n// export default Product\r\n","import React from 'react'\r\n\r\nconst loader = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default loader\r\n","export const ADMIN_PRODUCTS_REQUEST = 'ADMIN_PRODUCTS_REQUEST'\r\nexport const ADMIN_PRODUCTS_SUCCESS = 'ADMIN_PRODUCTS_SUCCESS'\r\nexport const ADMIN_PRODUCTS_FAIL = 'ADMIN_PRODUCTS_FAIL'\r\n\r\nexport const ALL_PRODUCTS_REQUEST = 'ALL_PRODUCTS_REQUEST'\r\nexport const ALL_PRODUCTS_SUCCESS = 'ALL_PRODUCTS_SUCCESS'\r\nexport const ALL_PRODUCTS_FAIL = 'ALL_PRODUCTS_FAIL'\r\n\r\nexport const NEW_PRODUCT_REQUEST = 'NEW_PRODUCT_REQUEST'\r\nexport const NEW_PRODUCT_SUCCESS = 'NEW_PRODUCT_SUCCESS'\r\nexport const NEW_PRODUCT_RESET = 'NEW_PRODUCT_RESET'\r\nexport const NEW_PRODUCT_FAIL = 'NEW_PRODUCT_FAIL'\r\n\r\nexport const DELETE_PRODUCT_REQUEST = 'DELETE_PRODUCT_REQUEST'\r\nexport const DELETE_PRODUCT_SUCCESS = 'DELETE_PRODUCT_SUCCESS'\r\nexport const DELETE_PRODUCT_RESET = 'DELETE_PRODUCT_RESET'\r\nexport const DELETE_PRODUCT_FAIL = 'DELETE_PRODUCT_FAIL'\r\n\r\nexport const UPDATE_PRODUCT_REQUEST = 'UPDATE_PRODUCT_REQUEST'\r\nexport const UPDATE_PRODUCT_SUCCESS = 'UPDATE_PRODUCT_SUCCESS'\r\nexport const UPDATE_PRODUCT_RESET = 'UPDATE_PRODUCT_RESET'\r\nexport const UPDATE_PRODUCT_FAIL = 'UPDATE_PRODUCT_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const NEW_REVIEW_REQUEST = 'NEW_REVIEW_REQUEST'\r\nexport const NEW_REVIEW_SUCCESS = 'NEW_REVIEW_SUCCESS'\r\nexport const NEW_REVIEW_RESET = 'NEW_REVIEW_RESET'\r\nexport const NEW_REVIEW_FAIL = 'NEW_REVIEW_FAIL'\r\n\r\nexport const GET_REVIEWS_REQUEST = 'GET_REVIEWS_REQUEST'\r\nexport const GET_REVIEWS_SUCCESS = 'GET_REVIEWS_SUCCESS'\r\nexport const GET_REVIEWS_FAIL = 'GET_REVIEWS_FAIL'\r\n\r\nexport const DELETE_REVIEW_REQUEST = 'DELETE_REVIEW_REQUEST'\r\nexport const DELETE_REVIEW_SUCCESS = 'DELETE_REVIEW_SUCCESS'\r\nexport const DELETE_REVIEW_RESET = 'DELETE_REVIEW_RESET'\r\nexport const DELETE_REVIEW_FAIL = 'DELETE_REVIEW_FAIL'\r\n\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'\r\n\r\n\r\n// export const ALL_PRODUCTS_REQUEST = 'ALL_PRODUCTS_REQUEST'\r\n// export const ALL_PRODUCTS_SUCCESS = 'ALL_PRODUCTS_SUCCESS'\r\n// export const ALL_PRODUCTS_FAIL = 'ALL_PRODUCTS_FAIL'\r\n\r\n// export const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\n// export const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\n// export const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\n\r\n// export const CLEAR_ERRORS = 'CLEAR_ERRORS'","import axios from 'axios';\r\n\r\nimport {\r\n    ALL_PRODUCTS_REQUEST,\r\n    ALL_PRODUCTS_SUCCESS,\r\n    ALL_PRODUCTS_FAIL,\r\n    ADMIN_PRODUCTS_REQUEST,\r\n    ADMIN_PRODUCTS_SUCCESS,\r\n    ADMIN_PRODUCTS_FAIL,\r\n    NEW_PRODUCT_REQUEST,\r\n    NEW_PRODUCT_SUCCESS,\r\n    NEW_PRODUCT_FAIL,\r\n    DELETE_PRODUCT_REQUEST,\r\n    DELETE_PRODUCT_SUCCESS,\r\n    DELETE_PRODUCT_FAIL,\r\n    UPDATE_PRODUCT_REQUEST,\r\n    UPDATE_PRODUCT_SUCCESS,\r\n    UPDATE_PRODUCT_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    NEW_REVIEW_REQUEST,\r\n    NEW_REVIEW_SUCCESS,\r\n    NEW_REVIEW_FAIL,\r\n    GET_REVIEWS_REQUEST,\r\n    GET_REVIEWS_SUCCESS,\r\n    GET_REVIEWS_FAIL,\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_RESET,\r\n    DELETE_REVIEW_FAIL,\r\n    CLEAR_ERRORS\r\n\r\n} from '../constants/productConstants'\r\n\r\nexport const getProducts = (keyword = '', currentPage = 1, price, category, rating = 0) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ALL_PRODUCTS_REQUEST })\r\n\r\n        let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\r\n\r\n        if (category) {\r\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\r\n        }\r\n\r\n        const { data } = await axios.get(link)\r\n\r\n        dispatch({\r\n            type: ALL_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_PRODUCTS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const newProduct = (productData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_PRODUCT_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/v1/admin/product/new`, productData, config)\r\n\r\n        dispatch({\r\n            type: NEW_PRODUCT_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Delete product (Admin)\r\nexport const deleteProduct = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_PRODUCT_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/admin/product/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_PRODUCT_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Update Product (ADMIN)\r\nexport const updateProduct = (id, productData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_PRODUCT_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/admin/product/${id}`, productData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/product/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data.product\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const newReview = (reviewData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_REVIEW_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config)\r\n\r\n        dispatch({\r\n            type: NEW_REVIEW_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_REVIEW_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getAdminProducts = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/products`)\r\n\r\n        dispatch({\r\n            type: ADMIN_PRODUCTS_SUCCESS,\r\n            payload: data.products\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ADMIN_PRODUCTS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get product reviews\r\nexport const getProductReviews = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: GET_REVIEWS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\r\n\r\n        dispatch({\r\n            type: GET_REVIEWS_SUCCESS,\r\n            payload: data.reviews\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: GET_REVIEWS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Delete product review\r\nexport const deleteReview = (id, productId) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_REVIEW_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`)\r\n\r\n        dispatch({\r\n            type: DELETE_REVIEW_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        console.log(error.response);\r\n\r\n        dispatch({\r\n            type: DELETE_REVIEW_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import axios from 'axios';\r\n\r\n// import { \r\n//     ALL_PRODUCTS_REQUEST, \r\n//     ALL_PRODUCTS_SUCCESS, \r\n//     ALL_PRODUCTS_FAIL,\r\n//     PRODUCT_DETAILS_REQUEST,\r\n//     PRODUCT_DETAILS_SUCCESS,\r\n//     PRODUCT_DETAILS_FAIL,\r\n//     CLEAR_ERRORS\r\n//  } from '../constants/productsConstants'\r\n\r\n//  export const getProducts = (keyword = '', currentPage = 1, price, category) => async (dispatch) => {\r\n//         try{\r\n//             dispatch({ type: ALL_PRODUCTS_REQUEST})\r\n \r\n//             let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}`\r\n\r\n//             if(category) {\r\n//                 link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}`\r\n//             }\r\n\r\n//             const { data } = await axios.get(link)\r\n\r\n//             dispatch({ type: ALL_PRODUCTS_SUCCESS,\r\n//             payload: data\r\n//         })\r\n\r\n//         } catch (error) {\r\n//             dispatch({\r\n//                 type:ALL_PRODUCTS_FAIL, \r\n//                 payload: error.response.data.message\r\n//             })\r\n//         }\r\n//  }\r\n\r\n//  export const getProductDetails = (id) => async (dispatch) => {\r\n//     try{\r\n//         dispatch({ type: PRODUCT_DETAILS_REQUEST})\r\n\r\n//         const { data } = await axios.get(`/api/v1/product/${id}`)\r\n\r\n//         dispatch({ \r\n//             type: PRODUCT_DETAILS_SUCCESS,\r\n//             payload: data.product\r\n//     })\r\n \r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type:PRODUCT_DETAILS_FAIL, \r\n//             payload: error.response.data.message\r\n//         })\r\n//     }\r\n// }\r\n\r\n//  // clear Errors\r\n//  export const clearErrors = () => async (dispatch) => {\r\n//      dispatch({\r\n//          type: CLEAR_ERRORS\r\n//      })\r\n//  }","import React, { Fragment, useState, useEffect } from 'react'\r\nimport Pagination from 'react-js-pagination'\r\nimport Slider from 'rc-slider'\r\nimport 'rc-slider/assets/index.css';\r\n\r\n\r\nimport MetaData from './layout/MetaData'\r\nimport Product from './product/Product'\r\nimport Loader from './layout/Loader'\r\n\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert';\r\nimport { getProducts } from '../actions/productActions'\r\n\r\nconst { createSliderWithTooltip } = Slider;\r\nconst Range = createSliderWithTooltip(Slider.Range)\r\n\r\n\r\n\r\nconst Home = ({ match }) => {\r\n\r\n    const [currentPage, setCurrentPage ] = useState(1)\r\n    const [price, setPrice] = useState([1,1000])\r\n    const [category, setCategory] = useState('')\r\n\r\n    const categories = [\r\n            'Electronics',\r\n            'Cameras',\r\n            'Laptops',\r\n            'Accessories',\r\n            'Headphone',\r\n            'Food',\r\n            'Book',\r\n            'Clothes/Shoes',\r\n            'Beauty/Health',\r\n            'Sports',\r\n            'Outdoor',\r\n            'Home',\r\n    ]\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\r\n\r\n    const keyword = match.params.keyword\r\n\r\n            useEffect(() => {\r\n                if(error){\r\n                    return alert.error(error)\r\n                }\r\n\r\n                dispatch(getProducts(keyword, currentPage, price, category));\r\n\r\n               \r\n\r\n            }, [dispatch, alert, error, keyword, currentPage, price, category])\r\n \r\n            function setCurrentPageNo(pageNumber){\r\n                setCurrentPage(pageNumber)\r\n            }\r\n\r\n            let count = productsCount;\r\n            if(keyword) {\r\n                count = filteredProductsCount\r\n            }\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader/> : (\r\n                <Fragment>\r\n                    <MetaData title={'Buy Best Products Online'}/>\r\n            \r\n                    <h1 id=\"products_heading\">Latest Products</h1>\r\n            \r\n                    <section id=\"products\" className=\"container mt-5\">\r\n                    <div className=\"row\">\r\n\r\n                    {keyword ? (\r\n                        <Fragment>\r\n                            <div className=\"col-6 col-md-3 mt-5 mb-5\">\r\n                                <div className=\"ps-5\">\r\n                                    <Range\r\n                                        marks={{\r\n                                            1 : `$1`,\r\n                                            1000: `$1000`\r\n                                        }}\r\n                                        min={1}\r\n                                        max={1000}\r\n                                        defaultValue={[1, 1000]}\r\n                                        tipFormatter={value => `$${value}`}\r\n                                        tipProps={{\r\n                                            placement: \"top\",\r\n                                            visible:true\r\n                                        }}\r\n                                        value={price}\r\n                                        onChange={price => setPrice(price)}\r\n                                        />\r\n\r\n                                        <hr className=\"my-5\" />\r\n\r\n                                        <div className=\"mt-5\">\r\n                                            <h4 className=\"mb-3\">\r\n                                                Categories\r\n                                            </h4>\r\n\r\n                                            <ul className=\"pl-0\">\r\n                                                {categories.map(category =>(\r\n                                                    <li \r\n                                                        style={{\r\n                                                            cursor:'pointer',\r\n                                                            listStyleType: 'none'\r\n                                                    }}\r\n                                                    key={category}\r\n                                                    onClick={() => setCategory(category)\r\n                                                        }\r\n                                                    >\r\n                                                        {category}\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                        </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className='col-6 col-md-9'>\r\n                                <div className=\"row\">\r\n                                    {\r\n                                        products && products.map(product => (\r\n                                            <Product key={product._id} product={product} col={4} />\r\n                                        \r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </Fragment>\r\n                    ): (\r\n                        products && products.map(product => (\r\n                            <Product key={product._id} product={product} col={3} />\r\n                        \r\n                        ))\r\n                    )}\r\n\r\n\r\n                   \r\n    \r\n                    \r\n                    </div>\r\n                \r\n                    </section>\r\n                    {resPerPage <= count && (\r\n                        <div className=\"d-flex justify-content-center mt-5\">\r\n                        <Pagination\r\n                        activePage={currentPage}\r\n                        itemsCountPerPage={resPerPage}\r\n                        totalItemsCount={productsCount}\r\n                        onChange={setCurrentPageNo}\r\n                        nextPageText={'Next'}\r\n                        prevPageText={'Prev'}\r\n                        firstPageText={'First'}\r\n                        lastPageText={'Last'}\r\n                        itemClass=\"page-item\"\r\n                        linkClass=\"page-link\"\r\n                        />\r\n                    </div>\r\n                    )}\r\n                    \r\n                </Fragment>\r\n\r\n            )}\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react'\r\n\r\nconst ListReviews = ({ reviews }) => {\r\n    return (\r\n        <div class=\"reviews w-75\">\r\n            <h3>Other's Reviews:</h3>\r\n            <hr />\r\n            {reviews && reviews.map(review => (\r\n                <div key={review._id} class=\"review-card my-3\">\r\n                    <div class=\"rating-outer\">\r\n                        <div class=\"rating-inner\" style={{ width: `${(review.rating / 5) * 100}%` }}></div>\r\n                    </div>\r\n                    <p class=\"review_user\">by {review.name}</p>\r\n                    <p class=\"review_comment\">{review.comment}</p>\r\n\r\n                    <hr />\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListReviews","export const ADD_TO_CART = 'ADD_TO_CART'\r\nexport const REMOVE_ITEM_CART = 'REMOVE_ITEM_CART'\r\nexport const SAVE_SHIPPING_INFO = 'SAVE_SHIPPING_INFO'","import axios from 'axios'\r\nimport { ADD_TO_CART, REMOVE_ITEM_CART, SAVE_SHIPPING_INFO } from '../constants/cartConstants'\r\n\r\nexport const addItemToCart = (id, quantity) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/v1/product/${id}`)\r\n\r\n    dispatch({\r\n        type: ADD_TO_CART,\r\n        payload: {\r\n            product: data.product._id,\r\n            name: data.product.name,\r\n            price: data.product.price,\r\n            image: data.product.images[0].url,\r\n            stock: data.product.stock,\r\n            quantity\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeItemFromCart = (id) => async (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: REMOVE_ITEM_CART,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n}\r\n\r\nexport const saveShippingInfo = (data) => async (dispatch) => {\r\n\r\n    dispatch({\r\n        type: SAVE_SHIPPING_INFO,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingInfo', JSON.stringify(data))\r\n\r\n}","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Carousel } from 'react-bootstrap'\r\n\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from '../layout/MetaData'\r\nimport ListReviews from '../review/ListReviews'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProductDetails, newReview, clearErrors } from '../../actions/productActions'\r\nimport { addItemToCart } from '../../actions/cartActions'\r\nimport { NEW_REVIEW_RESET } from '../../constants/productConstants'\r\n\r\nconst ProductDetails = ({ match }) => {\r\n\r\n    const [quantity, setQuantity] = useState(1)\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { loading, error, product } = useSelector(state => state.productDetails)\r\n    const { user } = useSelector(state => state.auth)\r\n    const { error: reviewError, success } = useSelector(state => state.newReview)\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductDetails(match.params.id))\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (reviewError) {\r\n            alert.error(reviewError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (success) {\r\n            alert.success('Reivew posted successfully')\r\n            dispatch({ type: NEW_REVIEW_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, reviewError, match.params.id, success])\r\n\r\n    const addToCart = () => {\r\n        dispatch(addItemToCart(match.params.id, quantity));\r\n        alert.success('Item Added to Cart')\r\n    }\r\n\r\n    const increaseQty = () => {\r\n        const count = document.querySelector('.count')\r\n\r\n        if (count.valueAsNumber >= product.stock) return;\r\n\r\n        const qty = count.valueAsNumber + 1;\r\n        setQuantity(qty)\r\n    }\r\n\r\n    const decreaseQty = () => {\r\n\r\n        const count = document.querySelector('.count')\r\n\r\n        if (count.valueAsNumber <= 1) return;\r\n\r\n        const qty = count.valueAsNumber - 1;\r\n        setQuantity(qty)\r\n\r\n    }\r\n\r\n    function setUserRatings() {\r\n        const stars = document.querySelectorAll('.star');\r\n\r\n        stars.forEach((star, index) => {\r\n            star.starValue = index + 1;\r\n\r\n            ['click', 'mouseover', 'mouseout'].forEach(function (e) {\r\n                star.addEventListener(e, showRatings);\r\n            })\r\n        })\r\n\r\n        function showRatings(e) {\r\n            stars.forEach((star, index) => {\r\n                if (e.type === 'click') {\r\n                    if (index < this.starValue) {\r\n                        star.classList.add('orange');\r\n\r\n                        setRating(this.starValue)\r\n                    } else {\r\n                        star.classList.remove('orange')\r\n                    }\r\n                }\r\n\r\n                if (e.type === 'mouseover') {\r\n                    if (index < this.starValue) {\r\n                        star.classList.add('yellow');\r\n                    } else {\r\n                        star.classList.remove('yellow')\r\n                    }\r\n                }\r\n\r\n                if (e.type === 'mouseout') {\r\n                    star.classList.remove('yellow')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const reviewHandler = () => {\r\n        const formData = new FormData();\r\n\r\n        formData.set('rating', rating);\r\n        formData.set('comment', comment);\r\n        formData.set('productId', match.params.id);\r\n\r\n        dispatch(newReview(formData));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={product.name} />\r\n                    <div className=\"row d-flex justify-content-around\">\r\n                        <div className=\"col-12 col-lg-5 img-fluid\" id=\"product_image\">\r\n                            <Carousel pause='hover'>\r\n                                {product.images && product.images.map(image => (\r\n                                    <Carousel.Item key={image.public_id}>\r\n                                        <img className=\"d-block w-100\" src={image.url} alt={product.title} />\r\n                                    </Carousel.Item>\r\n                                ))}\r\n                            </Carousel>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-lg-5 mt-5\">\r\n                            <h3>{product.name}</h3>\r\n                            <p id=\"product_id\">Product # {product._id}</p>\r\n\r\n                            <hr />\r\n\r\n                            <div className=\"rating-outer\">\r\n                                <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\r\n                            </div>\r\n                            <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\r\n\r\n                            <hr />\r\n\r\n                            <p id=\"product_price\">${product.price}</p>\r\n                            <div className=\"stockCounter d-inline\">\r\n                                <span className=\"btn btn-danger minus\" onClick={decreaseQty}>-</span>\r\n\r\n                                <input type=\"number\" className=\"form-control count d-inline\" value={quantity} readOnly />\r\n\r\n                                <span className=\"btn btn-primary plus\" onClick={increaseQty}>+</span>\r\n                            </div>\r\n                            <button type=\"button\" id=\"cart_btn\" className=\"btn btn-primary d-inline ml-4\" disabled={product.stock === 0} onClick={addToCart}>Add to Cart</button>\r\n\r\n                            <hr />\r\n\r\n                            <p>Status: <span id=\"stock_status\" className={product.stock > 0 ? 'greenColor' : 'redColor'} >{product.stock > 0 ? 'In Stock' : 'Out of Stock'}</span></p>\r\n\r\n                            <hr />\r\n\r\n                            <h4 className=\"mt-2\">Description:</h4>\r\n                            <p>{product.description}</p>\r\n                            <hr />\r\n                            <p id=\"product_seller mb-3\">Sold by: <strong>{product.seller}</strong></p>\r\n\r\n                            {user ? <button id=\"review_btn\" type=\"button\" className=\"btn btn-primary mt-4\" data-toggle=\"modal\" data-target=\"#ratingModal\" onClick={setUserRatings}>\r\n                                Submit Your Review\r\n                            </button>\r\n                                :\r\n                                <div className=\"alert alert-danger mt-5\" type='alert'>Login to post your review.</div>\r\n                            }\r\n\r\n\r\n                            <div className=\"row mt-2 mb-5\">\r\n                                <div className=\"rating w-50\">\r\n\r\n                                    <div className=\"modal fade\" id=\"ratingModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"ratingModalLabel\" aria-hidden=\"true\">\r\n                                        <div className=\"modal-dialog\" role=\"document\">\r\n                                            <div className=\"modal-content\">\r\n                                                <div className=\"modal-header\">\r\n                                                    <h5 className=\"modal-title\" id=\"ratingModalLabel\">Submit Review</h5>\r\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                        <span aria-hidden=\"true\">&times;</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"modal-body\">\r\n\r\n                                                    <ul className=\"stars\" >\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                    </ul>\r\n\r\n                                                    <textarea\r\n                                                        name=\"review\"\r\n                                                        id=\"review\" className=\"form-control mt-3\"\r\n                                                        value={comment}\r\n                                                        onChange={(e) => setComment(e.target.value)}\r\n                                                    >\r\n\r\n                                                    </textarea>\r\n\r\n                                                    <button className=\"btn my-3 float-right review-btn px-4 text-white\" onClick={reviewHandler} data-dismiss=\"modal\" aria-label=\"Close\">Submit</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {product.reviews && product.reviews.length > 0 && (\r\n                        <ListReviews reviews={product.reviews} />\r\n                    )}\r\n\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductDetails\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { Fragment, useEffect } from 'react'\r\n// import { Carousel } from 'react-bootstrap'\r\n\r\n// import Loader from '../layout/Loader'\r\n// import MetaData from '../layout/MetaData'\r\n\r\n// import { useAlert } from 'react-alert'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import { getProductDetails, clearErrors } from '../../actions/productActions'\r\n\r\n// const ProductDetails = ({ match }) => {\r\n\r\n//     const dispatch = useDispatch();\r\n//     const alert = useAlert();\r\n\r\n//     const { loading, error, product } = useSelector(state => state.productDetails)\r\n\r\n//     useEffect(() => {\r\n//         dispatch(getProductDetails( match.params.id))\r\n\r\n//         if(error) {\r\n//             alert.error(error);\r\n//             dispatch(clearErrors())\r\n//         }\r\n\r\n//     }, [dispatch, alert, error, match.params.id])\r\n//     return (\r\n//         <Fragment>\r\n \r\n//         {loading ? <Loader/> : (\r\n//             <Fragment>\r\n//             <MetaData title={product.name} />\r\n//             <div className=\"row d-flex justify-content-around\">\r\n//             <div className=\"col-12 col-lg-5 img-fluid\" id=\"product_image\">\r\n//                 <Carousel pause='hover'>\r\n//                     {product.images && product.images.map(image => (\r\n//                         <Carousel.Item key={image.public_id}>\r\n//                             <img className=\"d-block w-100\" src={image.url} alt={product.title} />\r\n//                         </Carousel.Item>\r\n//                     ))}\r\n//                 </Carousel>\r\n//             </div>\r\n\r\n//             <div className=\"col-12 col-lg-5 mt-5\">\r\n//                 <h3>{product.name}</h3>\r\n//                 <p id=\"product_id\">Product # {product._id}</p>\r\n\r\n//                 <hr />\r\n\r\n//                 <div className=\"rating-outer\">\r\n//                     <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\r\n//                 </div>\r\n//                 <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\r\n\r\n//                 <hr />\r\n\r\n//                 <p id=\"product_price\">${product.price}</p>\r\n//                 <div className=\"stockCounter d-inline\">\r\n//                 <span className=\"btn btn-danger minus\">-</span>\r\n//                     {/* <span className=\"btn btn-danger minus\" onClick={decreaseQty}>-</span> */}\r\n\r\n//                     <input type=\"number\" className=\"form-control count d-inline\" value=\"1\" readOnly />\r\n\r\n//                     <span className=\"btn btn-primary plus\">+</span>\r\n\r\n//                     {/* <span className=\"btn btn-primary plus\" onClick={increaseQty}>+</span> */}\r\n//                 </div>\r\n//                 {/* <button type=\"button\" id=\"cart_btn\" className=\"btn btn-primary d-inline ml-4\" disabled={product.stock === 0} onClick={addToCart}>Add to Cart</button> */}\r\n//                 <button type=\"button\" id=\"cart_btn\" className=\"btn btn-primary d-inline ml-4\">Add to Cart</button>\r\n\r\n//                 <hr />\r\n\r\n//                 <p>Status: <span id=\"stock_status\" className={product.stock > 0 ? 'greenColor' : 'redColor'} >{product.stock > 0 ? 'In Stock' : 'Out of Stock'}</span></p>\r\n\r\n//                 <hr />\r\n\r\n//                 <h4 className=\"mt-2\">Description:</h4>\r\n//                 <p>{product.description}</p>\r\n//                 <hr />\r\n//                 <p id=\"product_seller mb-3\">Sold by: <strong>{product.seller}</strong></p>\r\n\r\n//                 {/* {user ? <button id=\"review_btn\" type=\"button\" className=\"btn btn-primary mt-4\" data-toggle=\"modal\" data-target=\"#ratingModal\" onClick={setUserRatings}>\r\n//                     Submit Your Review\r\n//                 </button>\r\n//                     :\r\n//                     <div className=\"alert alert-danger mt-5\" type='alert'>Login to post your review.</div>\r\n//                 } */}\r\n//                 <button id=\"review_btn\" type=\"button\" className=\"btn btn-primary mt-4\" data-toggle=\"modal\" data-target=\"#ratingModal\">\r\n//                     Submit Your Review\r\n//                 </button>\r\n\r\n\r\n//                 <div className=\"row mt-2 mb-5\">\r\n//                     <div className=\"rating w-50\">\r\n\r\n//                         <div className=\"modal fade\" id=\"ratingModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"ratingModalLabel\" aria-hidden=\"true\">\r\n//                             <div className=\"modal-dialog\" role=\"document\">\r\n//                                 <div className=\"modal-content\">\r\n//                                     <div className=\"modal-header\">\r\n//                                         <h5 className=\"modal-title\" id=\"ratingModalLabel\">Submit Review</h5>\r\n//                                         <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n//                                             <span aria-hidden=\"true\">&times;</span>\r\n//                                         </button>\r\n//                                     </div>\r\n//                                     <div className=\"modal-body\">\r\n\r\n//                                         <ul className=\"stars\" >\r\n//                                             <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n//                                             <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n//                                             <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n//                                             <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n//                                             <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n//                                         </ul>\r\n\r\n//                                         {/* <textarea\r\n//                                             name=\"review\"\r\n//                                             id=\"review\" className=\"form-control mt-3\"\r\n//                                             value={comment}\r\n//                                             onChange={(e) => setComment(e.target.value)}\r\n//                                         >\r\n\r\n//                                         </textarea> */}\r\n//                                         <textarea\r\n//                                             name=\"review\"\r\n//                                             id=\"review\" className=\"form-control mt-3\"\r\n                                        \r\n//                                         >\r\n\r\n//                                         </textarea>\r\n\r\n//                                         {/* <button className=\"btn my-3 float-right review-btn px-4 text-white\" onClick={reviewHandler} data-dismiss=\"modal\" aria-label=\"Close\">Submit</button> */}\r\n//                                         <button className=\"btn my-3 float-right review-btn px-4 text-white\" data-dismiss=\"modal\" aria-label=\"Close\">Submit</button>\r\n//                                     </div>\r\n//                                 </div>\r\n//                             </div>\r\n//                         </div>\r\n\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//             </Fragment>\r\n\r\n//         )}\r\n//         </Fragment>\r\n        \r\n//     )\r\n// }\r\n\r\n// export default ProductDetails\r\n","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions'\r\n\r\nconst Cart = ({ history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { cartItems } = useSelector(state => state.cart)\r\n\r\n    const removeCartItemHandler = (id) => {\r\n        dispatch(removeItemFromCart(id))\r\n    }\r\n\r\n    const increaseQty = (id, quantity, stock) => {\r\n        const newQty = quantity + 1;\r\n\r\n        if (newQty > stock) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n    }\r\n\r\n    const decreaseQty = (id, quantity) => {\r\n\r\n        const newQty = quantity - 1;\r\n\r\n        if (newQty <= 0) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Your Cart'} />\r\n            {cartItems.length === 0 ? <h2 className=\"mt-5\">Your Cart is Empty</h2> : (\r\n                <Fragment>\r\n                    <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length} items</b></h2>\r\n\r\n                    <div className=\"row d-flex justify-content-between\">\r\n                        <div className=\"col-12 col-lg-8\">\r\n\r\n                            {cartItems.map(item => (\r\n                                <Fragment>\r\n                                    <hr />\r\n\r\n                                    <div className=\"cart-item\" key={item.product}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-4 col-lg-3\">\r\n                                                <img src={item.image} alt=\"Laptop\" height=\"90\" width=\"115\" />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-5 col-lg-3\">\r\n                                                <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                                <p id=\"card_item_price\">${item.price}</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                                <div className=\"stockCounter d-inline\">\r\n                                                    <span className=\"btn btn-danger minus\" onClick={() => decreaseQty(item.product, item.quantity)}>-</span>\r\n\r\n                                                    <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\r\n\r\n                                                    <span className=\"btn btn-primary plus\" onClick={() => increaseQty(item.product, item.quantity, item.stock)}>+</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\r\n                                                <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={() => removeCartItemHandler(item.product)} ></i>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                </Fragment>\r\n                            ))}\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-lg-3 my-4\">\r\n                            <div id=\"order_summary\">\r\n                                <h4>Order Summary</h4>\r\n                                <hr />\r\n                                <p>Subtotal:  <span className=\"order-summary-values\">{cartItems.reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\r\n                                <p>Est. total: <span className=\"order-summary-values\">${cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)}</span></p>\r\n\r\n                                <hr />\r\n                                <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Check out</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Cart","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CheckoutSteps = ({ shipping, confirmOrder, payment }) => {\r\n    return (\r\n        <div className=\"checkout-progress d-flex justify-content-center mt-5\">\r\n\r\n            {shipping ? <Link to='shippping' className=\"float-right\">\r\n                <div className=\"triangle2-active\"></div>\r\n                <div className=\"step active-step\">Shipping</div>\r\n                <div className=\"triangle-active\"></div>\r\n            </Link> : <Link to=\"#!\" disabled>\r\n                    <div className=\"triangle2-incomplete\"></div>\r\n                    <div className=\"step incomplete\">Shipping</div>\r\n                    <div className=\"triangle-incomplete\"></div>\r\n                </Link>}\r\n\r\n            {confirmOrder ? <Link to='/order/confirm' className=\"float-right\">\r\n                <div className=\"triangle2-active\"></div>\r\n                <div className=\"step active-step\">Confirm Order</div>\r\n                <div className=\"triangle-active\"></div>\r\n            </Link> : <Link to=\"#!\" disabled>\r\n                    <div className=\"triangle2-incomplete\"></div>\r\n                    <div className=\"step incomplete\">Confirm Order</div>\r\n                    <div className=\"triangle-incomplete\"></div>\r\n                </Link>}\r\n\r\n            {payment ? <Link to='/payment' className=\"float-right\">\r\n                <div className=\"triangle2-active\"></div>\r\n                <div className=\"step active-step\">Payment</div>\r\n                <div className=\"triangle-active\"></div>\r\n            </Link> : <Link to=\"#!\" disabled>\r\n                    <div className=\"triangle2-incomplete\"></div>\r\n                    <div className=\"step incomplete\">Payment</div>\r\n                    <div className=\"triangle-incomplete\"></div>\r\n                </Link>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { Fragment, useState } from 'react'\r\nimport { countries } from 'countries-list'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport CheckoutSteps from './CheckoutSteps'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveShippingInfo } from '../../actions/cartActions'\r\n\r\nconst Shipping = ({ history }) => {\r\n\r\n    const countriesList = Object.values(countries)\r\n\r\n    const { shippingInfo } = useSelector(state => state.cart)\r\n\r\n    const [address, setAddress] = useState(shippingInfo.address)\r\n    const [city, setCity] = useState(shippingInfo.city)\r\n    const [postalCode, setPostalCode] = useState(shippingInfo.postalCode)\r\n    const [phoneNo, setPhoneNo] = useState(shippingInfo.phoneNo)\r\n    const [country, setCountry] = useState(shippingInfo.country)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(saveShippingInfo({ address, city, phoneNo, postalCode, country }))\r\n        history.push('/confirm')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'Shipping Info'} />\r\n\r\n            <CheckoutSteps shipping />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-4\">Shipping Info</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"address_field\">Address</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"address_field\"\r\n                                className=\"form-control\"\r\n                                value={address}\r\n                                onChange={(e) => setAddress(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"city_field\">City</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"city_field\"\r\n                                className=\"form-control\"\r\n                                value={city}\r\n                                onChange={(e) => setCity(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"phone_field\">Phone No</label>\r\n                            <input\r\n                                type=\"phone\"\r\n                                id=\"phone_field\"\r\n                                className=\"form-control\"\r\n                                value={phoneNo}\r\n                                onChange={(e) => setPhoneNo(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"postal_code_field\">Postal Code</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                id=\"postal_code_field\"\r\n                                className=\"form-control\"\r\n                                value={postalCode}\r\n                                onChange={(e) => setPostalCode(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"country_field\">Country</label>\r\n                            <select\r\n                                id=\"country_field\"\r\n                                className=\"form-control\"\r\n                                value={country}\r\n                                onChange={(e) => setCountry(e.target.value)}\r\n                                required\r\n                            >\r\n\r\n                                {countriesList.map(country => (\r\n                                    <option key={country.name} value={country.name}>\r\n                                        {country.name}\r\n                                    </option>\r\n                                ))}\r\n\r\n                            </select>\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"shipping_btn\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                        >\r\n                            CONTINUE\r\n                            </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Shipping","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport CheckoutSteps from './CheckoutSteps'\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ConfirmOrder = ({ history }) => {\r\n\r\n    const { cartItems, shippingInfo } = useSelector(state => state.cart)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    // Calculate Order Prices\r\n    const itemsPrice = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0)\r\n    const shippingPrice = itemsPrice > 200 ? 0 : 25\r\n    const taxPrice = Number((0.05 * itemsPrice).toFixed(2))\r\n    const totalPrice = (itemsPrice + shippingPrice + taxPrice).toFixed(2)\r\n\r\n    const processToPayment = () => {\r\n        const data = {\r\n            itemsPrice: itemsPrice.toFixed(2),\r\n            shippingPrice,\r\n            taxPrice,\r\n            totalPrice\r\n        }\r\n\r\n        sessionStorage.setItem('orderInfo', JSON.stringify(data))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'Confirm Order'} />\r\n\r\n            <CheckoutSteps shipping confirmOrder />\r\n\r\n            <div className=\"row d-flex justify-content-between\">\r\n                <div className=\"col-12 col-lg-8 mt-5 order-confirm\">\r\n\r\n                    <h4 className=\"mb-3\">Shipping Info</h4>\r\n                    <p><b>Name:</b> {user && user.name}</p>\r\n                    <p><b>Phone:</b> {shippingInfo.phoneNo}</p>\r\n                    <p className=\"mb-4\"><b>Address:</b> {`${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`}</p>\r\n\r\n                    <hr />\r\n                    <h4 className=\"mt-4\">Your Cart Items:</h4>\r\n\r\n                    {cartItems.map(item => (\r\n                        <Fragment>\r\n                            <hr />\r\n                            <div className=\"cart-item my-1\" key={item.product}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-4 col-lg-2\">\r\n                                        <img src={item.image} alt=\"Laptop\" height=\"45\" width=\"65\" />\r\n                                    </div>\r\n\r\n                                    <div className=\"col-5 col-lg-6\">\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"col-4 col-lg-4 mt-4 mt-lg-0\">\r\n                                        <p>{item.quantity} x ${item.price} = <b>${(item.quantity * item.price).toFixed(2)}</b></p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                        </Fragment>\r\n                    ))}\r\n\r\n\r\n\r\n                </div>\r\n\r\n                <div className=\"col-12 col-lg-3 my-4\">\r\n                    <div id=\"order_summary\">\r\n                        <h4>Order Summary</h4>\r\n                        <hr />\r\n                        <p>Subtotal:  <span className=\"order-summary-values\">${itemsPrice}</span></p>\r\n                        <p>Shipping: <span className=\"order-summary-values\">${shippingPrice}</span></p>\r\n                        <p>Tax:  <span className=\"order-summary-values\">${taxPrice}</span></p>\r\n\r\n                        <hr />\r\n\r\n                        <p>Total: <span className=\"order-summary-values\">${totalPrice}</span></p>\r\n\r\n                        <hr />\r\n                        <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={processToPayment}>Proceed to Payment</button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ConfirmOrder","export const CREATE_ORDER_REQUEST = 'CREATE_ORDER_REQUEST'\r\nexport const CREATE_ORDER_SUCCESS = 'CREATE_ORDER_SUCCESS'\r\nexport const CREATE_ORDER_FAIL = 'CREATE_ORDER_FAIL'\r\n\r\nexport const MY_ORDERS_REQUEST = 'MY_ORDERS_REQUEST'\r\nexport const MY_ORDERS_SUCCESS = 'MY_ORDERS_SUCCESS'\r\nexport const MY_ORDERS_FAIL = 'MY_ORDERS_FAIL'\r\n\r\nexport const ALL_ORDERS_REQUEST = 'ALL_ORDERS_REQUEST'\r\nexport const ALL_ORDERS_SUCCESS = 'ALL_ORDERS_SUCCESS'\r\nexport const ALL_ORDERS_FAIL = 'ALL_ORDERS_FAIL'\r\n\r\nexport const UPDATE_ORDER_REQUEST = 'UPDATE_ORDER_REQUEST'\r\nexport const UPDATE_ORDER_SUCCESS = 'UPDATE_ORDER_SUCCESS'\r\nexport const UPDATE_ORDER_RESET = 'UPDATE_ORDER_RESET'\r\nexport const UPDATE_ORDER_FAIL = 'UPDATE_ORDER_FAIL'\r\n\r\nexport const DELETE_ORDER_REQUEST = 'DELETE_ORDER_REQUEST'\r\nexport const DELETE_ORDER_SUCCESS = 'DELETE_ORDER_SUCCESS'\r\nexport const DELETE_ORDER_RESET = 'DELETE_ORDER_RESET'\r\nexport const DELETE_ORDER_FAIL = 'DELETE_ORDER_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'","import axios from 'axios'\r\n\r\nimport {\r\n    CREATE_ORDER_REQUEST,\r\n    CREATE_ORDER_SUCCESS,\r\n    CREATE_ORDER_FAIL,\r\n    MY_ORDERS_REQUEST,\r\n    MY_ORDERS_SUCCESS,\r\n    MY_ORDERS_FAIL,\r\n    ALL_ORDERS_REQUEST,\r\n    ALL_ORDERS_SUCCESS,\r\n    ALL_ORDERS_FAIL,\r\n    UPDATE_ORDER_SUCCESS,\r\n    UPDATE_ORDER_REQUEST,\r\n    UPDATE_ORDER_FAIL,\r\n    DELETE_ORDER_REQUEST,\r\n    DELETE_ORDER_SUCCESS,\r\n    DELETE_ORDER_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({ type: CREATE_ORDER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/order/new', order, config)\r\n\r\n        dispatch({\r\n            type: CREATE_ORDER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_ORDER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get curretly logged in user orders\r\nexport const myOrders = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: MY_ORDERS_REQUEST });\r\n\r\n        const { data } = await axios.get('/api/v1/orders/me')\r\n\r\n        dispatch({\r\n            type: MY_ORDERS_SUCCESS,\r\n            payload: data.orders\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: MY_ORDERS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get order details\r\nexport const getOrderDetails = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ORDER_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/v1/order/${id}`)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data.order\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get all orders - ADMIN\r\nexport const allOrders = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ALL_ORDERS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/orders`)\r\n\r\n        dispatch({\r\n            type: ALL_ORDERS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_ORDERS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// update order\r\nexport const updateOrder = (id, orderData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_ORDER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/admin/order/${id}`, orderData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_ORDER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_ORDER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Delete order\r\nexport const deleteOrder = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_ORDER_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/admin/order/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_ORDER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_ORDER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}","import React, { Fragment, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport CheckoutSteps from './CheckoutSteps'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createOrder, clearErrors } from '../../actions/orderActions'\r\n\r\nimport { useStripe, useElements, CardNumberElement, CardExpiryElement, CardCvcElement } from '@stripe/react-stripe-js'\r\n\r\nimport axios from 'axios'\r\n\r\nconst options = {\r\n    style: {\r\n        base: {\r\n            fontSize: '16px'\r\n        },\r\n        invalid: {\r\n            color: '#9e2146'\r\n        }\r\n    }\r\n}\r\n\r\nconst Payment = ({ history }) => {\r\n\r\n    const alert = useAlert();\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector(state => state.auth)\r\n    const { cartItems, shippingInfo } = useSelector(state => state.cart);\r\n    const { error } = useSelector(state => state.newOrder)\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n    }, [dispatch, alert, error])\r\n\r\n    const order = {\r\n        orderItems: cartItems,\r\n        shippingInfo\r\n    }\r\n\r\n    const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'));\r\n    if (orderInfo) {\r\n        order.itemsPrice = orderInfo.itemsPrice\r\n        order.shippingPrice = orderInfo.shippingPrice\r\n        order.taxPrice = orderInfo.taxPrice\r\n        order.totalPrice = orderInfo.totalPrice\r\n    }\r\n\r\n    const paymentData = {\r\n        amount: Math.round(orderInfo.totalPrice * 100)\r\n    }\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        document.querySelector('#pay_btn').disabled = true;\r\n\r\n        let res;\r\n        try {\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n\r\n            res = await axios.post('/api/v1/payment/process', paymentData, config)\r\n\r\n            const clientSecret = res.data.client_secret;\r\n\r\n            console.log(clientSecret);\r\n\r\n            if (!stripe || !elements) {\r\n                return;\r\n            }\r\n\r\n            const result = await stripe.confirmCardPayment(clientSecret, {\r\n                payment_method: {\r\n                    card: elements.getElement(CardNumberElement),\r\n                    billing_details: {\r\n                        name: user.name,\r\n                        email: user.email\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (result.error) {\r\n                alert.error(result.error.message);\r\n                document.querySelector('#pay_btn').disabled = false;\r\n            } else {\r\n\r\n                // The payment is processed or not\r\n                if (result.paymentIntent.status === 'succeeded') {\r\n\r\n                    order.paymentInfo = {\r\n                        id: result.paymentIntent.id,\r\n                        status: result.paymentIntent.status\r\n                    }\r\n\r\n                    dispatch(createOrder(order))\r\n\r\n                    history.push('/success')\r\n                } else {\r\n                    alert.error('There is some issue while payment processing')\r\n                }\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            document.querySelector('#pay_btn').disabled = false;\r\n            alert.error(error.response.data.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Payment'} />\r\n\r\n            <CheckoutSteps shipping confirmOrder payment />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-4\">Card Info</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_num_field\">Card Number</label>\r\n                            <CardNumberElement\r\n                                type=\"text\"\r\n                                id=\"card_num_field\"\r\n                                className=\"form-control\"\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_exp_field\">Card Expiry</label>\r\n                            <CardExpiryElement\r\n                                type=\"text\"\r\n                                id=\"card_exp_field\"\r\n                                className=\"form-control\"\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_cvc_field\">Card CVC</label>\r\n                            <CardCvcElement\r\n                                type=\"text\"\r\n                                id=\"card_cvc_field\"\r\n                                className=\"form-control\"\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <button\r\n                            id=\"pay_btn\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                        >\r\n                            Pay {` - ${orderInfo && orderInfo.totalPrice}`}\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Payment","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nconst OrderSuccess = () => {\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'Order Success'} />\r\n\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-6 mt-5 text-center\">\r\n                    <img className=\"my-5 img-fluid d-block mx-auto\" src=\"/images/order_success.png\" alt=\"Order Success\" width=\"200\" height=\"200\" />\r\n\r\n                    <h2>Your Order has been placed successfully.</h2>\r\n\r\n                    <Link to=\"/orders/me\">Go to Orders</Link>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OrderSuccess","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { myOrders, clearErrors } from '../../actions/orderActions'\r\n\r\nconst ListOrders = () => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, orders } = useSelector(state => state.myOrders);\r\n\r\n    useEffect(() => {\r\n        dispatch(myOrders());\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n    }, [dispatch, alert, error])\r\n\r\n    const setOrders = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Order ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Num of Items',\r\n                    field: 'numOfItems',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Amount',\r\n                    field: 'amount',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Status',\r\n                    field: 'status',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        orders.forEach(order => {\r\n            data.rows.push({\r\n                id: order._id,\r\n                numOfItems: order.orderItems.length,\r\n                amount: `$${order.totalPrice}`,\r\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\r\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\r\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\r\n                actions:\r\n                    <Link to={`/order/${order._id}`} className=\"btn btn-primary\">\r\n                        <i className=\"fa fa-eye\"></i>\r\n                    </Link>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'My Orders'} />\r\n\r\n            <h1 className=\"my-5\">My Orders</h1>\r\n\r\n            {loading ? <Loader /> : (\r\n                <MDBDataTable\r\n                    data={setOrders()}\r\n                    className=\"px-3\"\r\n                    bordered\r\n                    striped\r\n                    hover\r\n                />\r\n            )}\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOrders","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getOrderDetails, clearErrors } from '../../actions/orderActions'\r\n\r\nconst OrderDetails = ({ match }) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, order = {} } = useSelector(state => state.orderDetails)\r\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order\r\n\r\n    useEffect(() => {\r\n        dispatch(getOrderDetails(match.params.id));\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n    }, [dispatch, alert, error, match.params.id])\r\n\r\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`\r\n\r\n    const isPaid = paymentInfo && paymentInfo.status === 'succeeded' ? true : false\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Order Details'} />\r\n\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <div className=\"row d-flex justify-content-between\">\r\n                        <div className=\"col-12 col-lg-8 mt-5 order-details\">\r\n\r\n                            <h1 className=\"my-5\">Order # {order._id}</h1>\r\n\r\n                            <h4 className=\"mb-4\">Shipping Info</h4>\r\n                            <p><b>Name:</b> {user && user.name}</p>\r\n                            <p><b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}</p>\r\n                            <p className=\"mb-4\"><b>Address:</b>{shippingDetails}</p>\r\n                            <p><b>Amount:</b> ${totalPrice}</p>\r\n\r\n                            <hr />\r\n\r\n                            <h4 className=\"my-4\">Payment</h4>\r\n                            <p className={isPaid ? \"greenColor\" : \"redColor\"}><b>{isPaid ? \"PAID\" : \"NOT PAID\"}</b></p>\r\n\r\n\r\n                            <h4 className=\"my-4\">Order Status:</h4>\r\n                            <p className={order.orderStatus && String(order.orderStatus).includes('Delivered') ? \"greenColor\" : \"redColor\"} ><b>{orderStatus}</b></p>\r\n\r\n\r\n                            <h4 className=\"my-4\">Order Items:</h4>\r\n\r\n                            <hr />\r\n                            <div className=\"cart-item my-1\">\r\n                                {orderItems && orderItems.map(item => (\r\n                                    <div key={item.product} className=\"row my-5\">\r\n                                        <div className=\"col-4 col-lg-2\">\r\n                                            <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-5 col-lg-5\">\r\n                                            <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                            <p>${item.price}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                            <p>{item.quantity} Piece(s)</p>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OrderDetails","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login, clearErrors } from '../../actions/userActions'\r\n\r\nconst Login = ({ history, location }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n\r\n        if (isAuthenticated) {\r\n            history.push(redirect)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch, alert, isAuthenticated, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={'Login'} />\r\n\r\n                    <div className=\"row wrapper\">\r\n                        <div className=\"col-10 col-lg-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                                <h1 className=\"mb-3\">Login</h1>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email_field\">Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        id=\"email_field\"\r\n                                        className=\"form-control\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password_field\">Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        id=\"password_field\"\r\n                                        className=\"form-control\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link>\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                >\r\n                                    LOGIN\r\n                                </button>\r\n\r\n                                <Link to=\"/register\" className=\"float-right mt-3\">New User?</Link>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { register, clearErrors } from '../../actions/userActions'\r\n\r\nconst Register = ({ history }) => {\r\n\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n    })\r\n\r\n    const { name, email, password } = user;\r\n\r\n    const [avatar, setAvatar] = useState('')\r\n    const [avatarPreview, setAvatarPreview] = useState('/images/unnamed.png')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n\r\n        if (isAuthenticated) {\r\n            history.push('/')\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch, alert, isAuthenticated, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('password', password);\r\n        formData.set('avatar', avatar);\r\n\r\n        dispatch(register(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n        if (e.target.name === 'avatar') {\r\n\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setAvatarPreview(reader.result)\r\n                    setAvatar(reader.result)\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(e.target.files[0])\r\n\r\n        } else {\r\n            setUser({ ...user, [e.target.name]: e.target.value })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'Register User'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                        <h1 className=\"mb-3\">Register</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Name</label>\r\n                            <input\r\n                                type=\"name\"\r\n                                id=\"name_field\"\r\n                                className=\"form-control\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password_field\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password_field\"\r\n                                className=\"form-control\"\r\n                                name='password'\r\n                                value={password}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <label htmlFor='avatar_upload'>Avatar</label>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div>\r\n                                    <figure className='avatar mr-3 item-rtl'>\r\n                                        <img\r\n                                            src={avatarPreview}\r\n                                            className='rounded-circle'\r\n                                            alt='Avatar Preview'\r\n                                        />\r\n                                    </figure>\r\n                                </div>\r\n                                <div className='custom-file'>\r\n                                    <input\r\n                                        type='file'\r\n                                        name='avatar'\r\n                                        className='custom-file-input'\r\n                                        id='customFile'\r\n                                        accept=\"iamges/*\"\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <label className='custom-file-label' htmlFor='customFile'>\r\n                                        Choose Avatar\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"register_button\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                            disabled={loading ? true : false}\r\n                        >\r\n                            REGISTER\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nconst Profile = () => {\r\n\r\n    const { user, loading } = useSelector(state => state.auth)\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={'Your Profile'} />\r\n\r\n                    <h2 className=\"mt-5 ml-5\">My Profile</h2>\r\n                    <div className=\"row justify-content-around mt-5 user-info\">\r\n                        <div className=\"col-12 col-md-3\">\r\n                            <figure className='avatar avatar-profile'>\r\n                                <img className=\"rounded-circle img-fluid\" src={user.avatar.url} alt={user.name} />\r\n                            </figure>\r\n                            <Link to=\"/me/update\" id=\"edit_profile\" className=\"btn btn-primary btn-block my-5\">\r\n                                Edit Profile\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-md-5\">\r\n                            <h4>Full Name</h4>\r\n                            <p>{user.name}</p>\r\n\r\n                            <h4>Email Address</h4>\r\n                            <p>{user.email}</p>\r\n\r\n                            <h4>Joined On</h4>\r\n                            <p>{String(user.createdAt).substring(0, 10)}</p>\r\n\r\n                            {user.role !== 'admin' && (\r\n                                <Link to=\"/orders/me\" className=\"btn btn-danger btn-block mt-5\">\r\n                                    My Orders\r\n                                </Link>\r\n                            )}\r\n\r\n                            <Link to=\"/password/update\" className=\"btn btn-primary btn-block mt-3\">\r\n                                Change Password\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Profile","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions'\r\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [avatar, setAvatar] = useState('')\r\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector(state => state.auth);\r\n    const { error, isUpdated, loading } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n\r\n        if (user) {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setAvatarPreview(user.avatar.url)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('User updated successfully')\r\n            dispatch(loadUser());\r\n\r\n            history.push('/me')\r\n\r\n            dispatch({\r\n                type: UPDATE_PROFILE_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('avatar', avatar);\r\n\r\n        dispatch(updateProfile(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setAvatarPreview(reader.result)\r\n                setAvatar(reader.result)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Profile'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Name</label>\r\n                            <input\r\n                                type=\"name\"\r\n                                id=\"name_field\"\r\n                                className=\"form-control\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <label htmlFor='avatar_upload'>Avatar</label>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div>\r\n                                    <figure className='avatar mr-3 item-rtl'>\r\n                                        <img\r\n                                            src={avatarPreview}\r\n                                            className='rounded-circle'\r\n                                            alt='Avatar Preview'\r\n                                        />\r\n                                    </figure>\r\n                                </div>\r\n                                <div className='custom-file'>\r\n                                    <input\r\n                                        type='file'\r\n                                        name='avatar'\r\n                                        className='custom-file-input'\r\n                                        id='customFile'\r\n                                        accept='image/*'\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <label className='custom-file-label' htmlFor='customFile'>\r\n                                        Choose Avatar\r\n                                </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updatePassword, clearErrors } from '../../actions/userActions'\r\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants'\r\n\r\nconst UpdatePassword = ({ history }) => {\r\n\r\n    const [oldPassword, setOldPassword] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, isUpdated, loading } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('Password updated successfully')\r\n\r\n            history.push('/me')\r\n\r\n            dispatch({\r\n                type: UPDATE_PASSWORD_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('oldPassword', oldPassword);\r\n        formData.set('password', password);\r\n\r\n        dispatch(updatePassword(formData))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Change Password'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mt-2 mb-5\">Update Password</h1>\r\n                        <div className=\"form-group\">\r\n                            <label for=\"old_password_field\">Old Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"old_password_field\"\r\n                                className=\"form-control\"\r\n                                value={oldPassword}\r\n                                onChange={(e) => setOldPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label for=\"new_password_field\">New Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"new_password_field\"\r\n                                className=\"form-control\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update Password</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdatePassword","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { forgotPassword, clearErrors } from '../../actions/userActions'\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    const [email, setEmail] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, loading, message } = useSelector(state => state.forgotPassword)\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (message) {\r\n            alert.success(message)\r\n        }\r\n\r\n    }, [dispatch, alert, error, message])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('email', email);\r\n\r\n        dispatch(forgotPassword(formData))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Forgot Password'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-3\">Forgot Password</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Enter Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"forgot_password_button\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                            disabled={loading ? true : false} >\r\n                            Send Email\r\n                    </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { resetPassword, clearErrors } from '../../actions/userActions'\r\n\r\nconst NewPassword = ({ history, match }) => {\r\n\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, success } = useSelector(state => state.forgotPassword)\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (success) {\r\n            alert.success('Password updated successfully')\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, alert, error, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('password', password);\r\n        formData.set('confirmPassword', confirmPassword);\r\n\r\n        dispatch(resetPassword(match.params.token, formData))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'New Password Reset'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-3\">New Password</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password_field\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password_field\"\r\n                                className=\"form-control\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"confirm_password_field\">Confirm Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"confirm_password_field\"\r\n                                className=\"form-control\"\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"new_password_button\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\">\r\n                            Set Password\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewPassword","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className=\"sidebar-wrapper\">\r\n            <nav id=\"sidebar\">\r\n                <ul className=\"list-unstyled components\">\r\n                    <li>\r\n                        <Link to=\"/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <a href=\"#productSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\"><i\r\n                            className=\"fa fa-product-hunt\"></i> Products</a>\r\n                        <ul className=\"collapse list-unstyled\" id=\"productSubmenu\">\r\n                            <li>\r\n                                <Link to=\"/admin/products\"><i className=\"fa fa-clipboard\"></i> All</Link>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <Link to=\"/admin/product\"><i className=\"fa fa-plus\"></i> Create</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <Link to=\"/admin/orders\"><i className=\"fa fa-shopping-basket\"></i> Orders</Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <Link to=\"/admin/users\"><i className=\"fa fa-users\"></i> Users</Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <Link to=\"/admin/reviews\"><i className=\"fa fa-star\"></i> Reviews</Link>\r\n                    </li>\r\n\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getAdminProducts } from '../../actions/productActions'\r\nimport { allOrders } from '../../actions/orderActions'\r\nimport { allUsers } from '../../actions/userActions'\r\n\r\nconst Dashboard = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { products } = useSelector(state => state.products)\r\n    const { users } = useSelector(state => state.allUsers)\r\n    const { orders, totalAmount, loading } = useSelector(state => state.allOrders)\r\n\r\n    let outOfStock = 0;\r\n    products.forEach(product => {\r\n        if (product.stock === 0) {\r\n            outOfStock += 1;\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts())\r\n        dispatch(allOrders())\r\n        dispatch(allUsers())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <h1 className=\"my-4\">Dashboard</h1>\r\n\r\n                    {loading ? <Loader /> : (\r\n                        <Fragment>\r\n                            <MetaData title={'Admin Dashboard'} />\r\n\r\n                            <div className=\"row pr-4\">\r\n                                <div className=\"col-xl-12 col-sm-12 mb-3\">\r\n                                    <div className=\"card text-white bg-primary o-hidden h-100\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"text-center card-font-size\">Total Amount<br /> <b>${totalAmount && totalAmount.toFixed(2)}</b>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row pr-4\">\r\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                                    <div className=\"card text-white bg-success o-hidden h-100\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"text-center card-font-size\">Products<br /> <b>{products && products.length}</b></div>\r\n                                        </div>\r\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/products\">\r\n                                            <span className=\"float-left\">View Details</span>\r\n                                            <span className=\"float-right\">\r\n                                                <i className=\"fa fa-angle-right\"></i>\r\n                                            </span>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                                    <div className=\"card text-white bg-danger o-hidden h-100\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"text-center card-font-size\">Orders<br /> <b>{orders && orders.length}</b></div>\r\n                                        </div>\r\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/orders\">\r\n                                            <span className=\"float-left\">View Details</span>\r\n                                            <span className=\"float-right\">\r\n                                                <i className=\"fa fa-angle-right\"></i>\r\n                                            </span>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                                    <div className=\"card text-white bg-info o-hidden h-100\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"text-center card-font-size\">Users<br /> <b>{users && users.length}</b></div>\r\n                                        </div>\r\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/users\">\r\n                                            <span className=\"float-left\">View Details</span>\r\n                                            <span className=\"float-right\">\r\n                                                <i className=\"fa fa-angle-right\"></i>\r\n                                            </span>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                                    <div className=\"card text-white bg-warning o-hidden h-100\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"text-center card-font-size\">Out of Stock<br /> <b>{outOfStock}</b></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Fragment>\r\n                    )}\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default Dashboard","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAdminProducts, deleteProduct, clearErrors } from '../../actions/productActions'\r\nimport { DELETE_PRODUCT_RESET } from '../../constants/productConstants'\r\n\r\nconst ProductsList = ({ history }) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, products } = useSelector(state => state.products);\r\n    const { error: deleteError, isDeleted } = useSelector(state => state.product)\r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts());\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (deleteError) {\r\n            alert.error(deleteError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('Product deleted successfully');\r\n            history.push('/admin/products');\r\n            dispatch({ type: DELETE_PRODUCT_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, deleteError, isDeleted, history])\r\n\r\n    const setProducts = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Price',\r\n                    field: 'price',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Stock',\r\n                    field: 'stock',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        products.forEach(product => {\r\n            data.rows.push({\r\n                id: product._id,\r\n                name: product.name,\r\n                price: `$${product.price}`,\r\n                stock: product.stock,\r\n                actions: <Fragment>\r\n                    <Link to={`/admin/product/${product._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteProductHandler(product._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </Fragment>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    const deleteProductHandler = (id) => {\r\n        dispatch(deleteProduct(id))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Products'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">All Products</h1>\r\n\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={setProducts()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductsList","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { newProduct, clearErrors } from '../../actions/productActions'\r\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants'\r\n\r\nconst NewProduct = ({ history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [stock, setStock] = useState(0);\r\n    const [seller, setSeller] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n\r\n    const categories = [\r\n        'Electronics',\r\n        'Cameras',\r\n        'Laptops',\r\n        'Accessories',\r\n        'Headphones',\r\n        'Food',\r\n        \"Books\",\r\n        'Clothes/Shoes',\r\n        'Beauty/Health',\r\n        'Sports',\r\n        'Outdoor',\r\n        'Home'\r\n    ]\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, success } = useSelector(state => state.newProduct);\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (success) {\r\n            history.push('/admin/products');\r\n            alert.success('Product created successfully');\r\n            dispatch({ type: NEW_PRODUCT_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('price', price);\r\n        formData.set('description', description);\r\n        formData.set('category', category);\r\n        formData.set('stock', stock);\r\n        formData.set('seller', seller);\r\n\r\n        images.forEach(image => {\r\n            formData.append('images', image)\r\n        })\r\n\r\n        dispatch(newProduct(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n\r\n        const files = Array.from(e.target.files)\r\n\r\n        setImagesPreview([]);\r\n        setImages([])\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\r\n                    setImages(oldArray => [...oldArray, reader.result])\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'New Product'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"wrapper my-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                                <h1 className=\"mb-4\">New Product</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"price_field\">Price</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"price_field\"\r\n                                        className=\"form-control\"\r\n                                        value={price}\r\n                                        onChange={(e) => setPrice(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"description_field\">Description</label>\r\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"category_field\">Category</label>\r\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category} >{category}</option>\r\n                                        ))}\r\n\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"stock_field\">Stock</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        id=\"stock_field\"\r\n                                        className=\"form-control\"\r\n                                        value={stock}\r\n                                        onChange={(e) => setStock(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"seller_field\"\r\n                                        className=\"form-control\"\r\n                                        value={seller}\r\n                                        onChange={(e) => setSeller(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className='form-group'>\r\n                                    <label>Images</label>\r\n\r\n                                    <div className='custom-file'>\r\n                                        <input\r\n                                            type='file'\r\n                                            name='product_images'\r\n                                            className='custom-file-input'\r\n                                            id='customFile'\r\n                                            onChange={onChange}\r\n                                            multiple\r\n                                        />\r\n                                        <label className='custom-file-label' htmlFor='customFile'>\r\n                                            Choose Images\r\n                                     </label>\r\n                                    </div>\r\n\r\n                                    {imagesPreview.map(img => (\r\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\r\n                                    ))}\r\n\r\n                                </div>\r\n\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                    disabled={loading ? true : false}\r\n                                >\r\n                                    CREATE\r\n                                </button>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewProduct","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProduct, getProductDetails, clearErrors } from '../../actions/productActions'\r\nimport { UPDATE_PRODUCT_RESET } from '../../constants/productConstants'\r\n\r\nconst UpdateProduct = ({ match, history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [stock, setStock] = useState(0);\r\n    const [seller, setSeller] = useState('');\r\n    const [images, setImages] = useState([]);\r\n\r\n    const [oldImages, setOldImages] = useState([]);\r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n\r\n    const categories = [\r\n        'Electronics',\r\n        'Cameras',\r\n        'Laptops',\r\n        'Accessories',\r\n        'Headphones',\r\n        'Food',\r\n        \"Books\",\r\n        'Clothes/Shoes',\r\n        'Beauty/Health',\r\n        'Sports',\r\n        'Outdoor',\r\n        'Home'\r\n    ]\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, product } = useSelector(state => state.productDetails)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.product);\r\n\r\n    const productId = match.params.id;\r\n\r\n    useEffect(() => {\r\n\r\n        if (product && product._id !== productId) {\r\n            dispatch(getProductDetails(productId));\r\n        } else {\r\n            setName(product.name);\r\n            setPrice(product.price);\r\n            setDescription(product.description);\r\n            setCategory(product.category);\r\n            setSeller(product.seller);\r\n            setStock(product.stock)\r\n            setOldImages(product.images)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (updateError) {\r\n            alert.error(updateError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n\r\n        if (isUpdated) {\r\n            history.push('/admin/products');\r\n            alert.success('Product updated successfully');\r\n            dispatch({ type: UPDATE_PRODUCT_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, isUpdated, history, updateError, product, productId])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('price', price);\r\n        formData.set('description', description);\r\n        formData.set('category', category);\r\n        formData.set('stock', stock);\r\n        formData.set('seller', seller);\r\n\r\n        images.forEach(image => {\r\n            formData.append('images', image)\r\n        })\r\n\r\n        dispatch(updateProduct(product._id, formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n\r\n        const files = Array.from(e.target.files)\r\n\r\n        setImagesPreview([]);\r\n        setImages([])\r\n        setOldImages([])\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\r\n                    setImages(oldArray => [...oldArray, reader.result])\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Product'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"wrapper my-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                                <h1 className=\"mb-4\">Update Product</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"price_field\">Price</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"price_field\"\r\n                                        className=\"form-control\"\r\n                                        value={price}\r\n                                        onChange={(e) => setPrice(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"description_field\">Description</label>\r\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"category_field\">Category</label>\r\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category} >{category}</option>\r\n                                        ))}\r\n\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"stock_field\">Stock</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        id=\"stock_field\"\r\n                                        className=\"form-control\"\r\n                                        value={stock}\r\n                                        onChange={(e) => setStock(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"seller_field\"\r\n                                        className=\"form-control\"\r\n                                        value={seller}\r\n                                        onChange={(e) => setSeller(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className='form-group'>\r\n                                    <label>Images</label>\r\n\r\n                                    <div className='custom-file'>\r\n                                        <input\r\n                                            type='file'\r\n                                            name='product_images'\r\n                                            className='custom-file-input'\r\n                                            id='customFile'\r\n                                            onChange={onChange}\r\n                                            multiple\r\n                                        />\r\n                                        <label className='custom-file-label' htmlFor='customFile'>\r\n                                            Choose Images\r\n                                 </label>\r\n                                    </div>\r\n\r\n                                    {oldImages && oldImages.map(img => (\r\n                                        <img key={img} src={img.url} alt={img.url} className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\r\n                                    ))}\r\n\r\n                                    {imagesPreview.map(img => (\r\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\r\n                                    ))}\r\n\r\n                                </div>\r\n\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                    disabled={loading ? true : false}\r\n                                >\r\n                                    UPDATE\r\n                            </button>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProduct","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { allOrders, deleteOrder, clearErrors } from '../../actions/orderActions'\r\nimport { DELETE_ORDER_RESET } from '../../constants/orderConstants'\r\n\r\nconst OrdersList = ({ history }) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, orders } = useSelector(state => state.allOrders);\r\n    const { isDeleted } = useSelector(state => state.order)\r\n\r\n    useEffect(() => {\r\n        dispatch(allOrders());\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('Order deleted successfully');\r\n            history.push('/admin/orders');\r\n            dispatch({ type: DELETE_ORDER_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, isDeleted, history])\r\n\r\n    const deleteOrderHandler = (id) => {\r\n        dispatch(deleteOrder(id))\r\n    }\r\n\r\n    const setOrders = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Order ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'No of Items',\r\n                    field: 'numofItems',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Amount',\r\n                    field: 'amount',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Status',\r\n                    field: 'status',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        orders.forEach(order => {\r\n            data.rows.push({\r\n                id: order._id,\r\n                numofItems: order.orderItems.length,\r\n                amount: `$${order.totalPrice}`,\r\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\r\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\r\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\r\n                actions: <Fragment>\r\n                    <Link to={`/admin/order/${order._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-eye\"></i>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteOrderHandler(order._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </Fragment>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Orders'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">All Orders</h1>\r\n\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={setOrders()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OrdersList","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getOrderDetails, updateOrder, clearErrors } from '../../actions/orderActions'\r\nimport { UPDATE_ORDER_RESET } from '../../constants/orderConstants'\r\n\r\nconst ProcessOrder = ({ match }) => {\r\n\r\n    const [status, setStatus] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, order = {} } = useSelector(state => state.orderDetails)\r\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order\r\n    const { error, isUpdated } = useSelector(state => state.order)\r\n\r\n    const orderId = match.params.id;\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(getOrderDetails(orderId))\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n\r\n        if (isUpdated) {\r\n            alert.success('Order updated successfully');\r\n            dispatch({ type: UPDATE_ORDER_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, isUpdated, orderId])\r\n\r\n\r\n    const updateOrderHandler = (id) => {\r\n\r\n        const formData = new FormData();\r\n        formData.set('status', status);\r\n\r\n        dispatch(updateOrder(id, formData))\r\n    }\r\n\r\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`\r\n    const isPaid = paymentInfo && paymentInfo.status === 'succeeded' ? true : false\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={`Process Order # ${order && order._id}`} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        {loading ? <Loader /> : (\r\n                            <div className=\"row d-flex justify-content-around\">\r\n                                <div className=\"col-12 col-lg-7 order-details\">\r\n\r\n                                    <h2 className=\"my-5\">Order # {order._id}</h2>\r\n\r\n                                    <h4 className=\"mb-4\">Shipping Info</h4>\r\n                                    <p><b>Name:</b> {user && user.name}</p>\r\n                                    <p><b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}</p>\r\n                                    <p className=\"mb-4\"><b>Address:</b>{shippingDetails}</p>\r\n                                    <p><b>Amount:</b> ${totalPrice}</p>\r\n\r\n                                    <hr />\r\n\r\n                                    <h4 className=\"my-4\">Payment</h4>\r\n                                    <p className={isPaid ? \"greenColor\" : \"redColor\"}><b>{isPaid ? \"PAID\" : \"NOT PAID\"}</b></p>\r\n\r\n                                    <h4 className=\"my-4\">Stripe ID</h4>\r\n                                    <p><b>{paymentInfo && paymentInfo.id}</b></p>\r\n\r\n                                    <h4 className=\"my-4\">Order Status:</h4>\r\n                                    <p className={order.orderStatus && String(order.orderStatus).includes('Delivered') ? \"greenColor\" : \"redColor\"} ><b>{orderStatus}</b></p>\r\n\r\n\r\n\r\n                                    <h4 className=\"my-4\">Order Items:</h4>\r\n\r\n                                    <hr />\r\n                                    <div className=\"cart-item my-1\">\r\n                                        {orderItems && orderItems.map(item => (\r\n                                            <div key={item.product} className=\"row my-5\">\r\n                                                <div className=\"col-4 col-lg-2\">\r\n                                                    <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\r\n                                                </div>\r\n\r\n                                                <div className=\"col-5 col-lg-5\">\r\n                                                    <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                                </div>\r\n\r\n\r\n                                                <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                                    <p>${item.price}</p>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                                    <p>{item.quantity} Piece(s)</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                    <hr />\r\n                                </div>\r\n\r\n                                <div className=\"col-12 col-lg-3 mt-5\">\r\n                                    <h4 className=\"my-4\">Status</h4>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name='status'\r\n                                            value={status}\r\n                                            onChange={(e) => setStatus(e.target.value)}\r\n                                        >\r\n                                            <option value=\"Processing\">Processing</option>\r\n                                            <option value=\"Shipped\">Shipped</option>\r\n                                            <option value=\"Delivered\">Delivered</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <button className=\"btn btn-primary btn-block\" onClick={() => updateOrderHandler(order._id)}>\r\n                                        Update Status\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        )}\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProcessOrder","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { allUsers, deleteUser, clearErrors } from '../../actions/userActions'\r\nimport { DELETE_USER_RESET } from '../../constants/userConstants'\r\n\r\nconst UsersList = ({ history }) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, users } = useSelector(state => state.allUsers);\r\n    const { isDeleted } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n        dispatch(allUsers());\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('User deleted successfully');\r\n            history.push('/admin/users');\r\n            dispatch({ type: DELETE_USER_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, isDeleted, history])\r\n\r\n    const deleteUserHandler = (id) => {\r\n        dispatch(deleteUser(id))\r\n    }\r\n\r\n    const setUsers = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'User ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Email',\r\n                    field: 'email',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Role',\r\n                    field: 'role',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        users.forEach(user => {\r\n            data.rows.push({\r\n                id: user._id,\r\n                name: user.name,\r\n                email: user.email,\r\n                role: user.role,\r\n\r\n                actions: <Fragment>\r\n                    <Link to={`/admin/user/${user._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteUserHandler(user._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </Fragment>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Users'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">All Users</h1>\r\n\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={setUsers()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UsersList","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateUser, getUserDetails, clearErrors } from '../../actions/userActions'\r\nimport { UPDATE_USER_RESET } from '../../constants/userConstants'\r\n\r\nconst UpdateUser = ({ history, match }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [role, setRole] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, isUpdated } = useSelector(state => state.user);\r\n    const { user } = useSelector(state => state.userDetails)\r\n\r\n    const userId = match.params.id;\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(user && user._id !== userId);\r\n        if (user && user._id !== userId) {\r\n            dispatch(getUserDetails(userId))\r\n        } else {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setRole(user.role)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('User updated successfully')\r\n\r\n            history.push('/admin/users')\r\n\r\n            dispatch({\r\n                type: UPDATE_USER_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, alert, error, history, isUpdated, userId, user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('role', role);\r\n\r\n        dispatch(updateUser(user._id, formData))\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={`Update User`} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <div className=\"row wrapper\">\r\n                        <div className=\"col-10 col-lg-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                                <h1 className=\"mt-2 mb-5\">Update User</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Name</label>\r\n                                    <input\r\n                                        type=\"name\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        name='name'\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email_field\">Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        id=\"email_field\"\r\n                                        className=\"form-control\"\r\n                                        name='email'\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"role_field\">Role</label>\r\n\r\n                                    <select\r\n                                        id=\"role_field\"\r\n                                        className=\"form-control\"\r\n                                        name='role'\r\n                                        value={role}\r\n                                        onChange={(e) => setRole(e.target.value)}\r\n                                    >\r\n                                        <option value=\"user\">user</option>\r\n                                        <option value=\"admin\">admin</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" >Update</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateUser","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProductReviews, deleteReview, clearErrors } from '../../actions/productActions'\r\nimport { DELETE_REVIEW_RESET } from '../../constants/productConstants'\r\n\r\nconst ProductReviews = () => {\r\n\r\n    const [productId, setProductId] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, reviews } = useSelector(state => state.productReviews);\r\n    const { isDeleted, error: deleteError } = useSelector(state => state.review)\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (deleteError) {\r\n            alert.error(deleteError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (productId !== '') {\r\n            dispatch(getProductReviews(productId))\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('Review deleted successfully');\r\n            dispatch({ type: DELETE_REVIEW_RESET })\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, alert, error, productId, isDeleted, deleteError])\r\n\r\n    const deleteReviewHandler = (id) => {\r\n        dispatch(deleteReview(id, productId))\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(getProductReviews(productId))\r\n    }\r\n\r\n    const setReviews = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Review ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Rating',\r\n                    field: 'rating',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Comment',\r\n                    field: 'comment',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'User',\r\n                    field: 'user',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        reviews.forEach(review => {\r\n            data.rows.push({\r\n                id: review._id,\r\n                rating: review.rating,\r\n                comment: review.comment,\r\n                user: review.name,\r\n\r\n                actions:\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteReviewHandler(review._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Product Reviews'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"row justify-content-center mt-5\">\r\n                            <div className=\"col-5\">\r\n                                <form onSubmit={submitHandler}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"productId_field\">Enter Product ID</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"productId_field\"\r\n                                            className=\"form-control\"\r\n                                            value={productId}\r\n                                            onChange={(e) => setProductId(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <button\r\n                                        id=\"search_button\"\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-primary btn-block py-2\"\r\n                                    >\r\n                                        SEARCH\r\n\t\t\t\t\t\t\t\t    </button>\r\n                                </ form>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        {reviews && reviews.length > 0 ? (\r\n                            <MDBDataTable\r\n                                data={setReviews()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        ) : (\r\n                                <p className=\"mt-5 text-center\">No Reviews.</p>\r\n                            )}\r\n\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductReviews","import React, { Fragment } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ProtectedRoute = ({ isAdmin, component: Component, ...rest }) => {\r\n\r\n    const { isAuthenticated, loading, user } = useSelector(state => state.auth)\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading === false && (\r\n                <Route\r\n                    {...rest}\r\n                    render={props => {\r\n                        if (isAuthenticated === false) {\r\n                            return <Redirect to='/login' />\r\n                        }\r\n\r\n                        if (isAdmin === true && user.role !== 'admin') {\r\n                            return <Redirect to=\"/\" />\r\n                        }\r\n\r\n                        return <Component {...props} />\r\n                    }}\r\n                />\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport { productsReducer, newProductReducer, productReducer, productDetailsReducer, newReviewReducer, productReviewsReducer, reviewReducer } from './reducers/productReducers'\r\nimport { authReducer, userReducer, forgotPasswordReducer, allUsersReducer, userDetailsReducer } from './reducers/userReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { newOrderReducer, myOrdersReducer, orderDetailsReducer, allOrdersReducer, orderReducer } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    products: productsReducer,\r\n    productDetails: productDetailsReducer,\r\n    newProduct: newProductReducer,\r\n    product: productReducer,\r\n    productReviews: productReviewsReducer,\r\n    review: reviewReducer,\r\n    auth: authReducer,\r\n    user: userReducer,\r\n    allUsers: allUsersReducer,\r\n    userDetails: userDetailsReducer,\r\n    forgotPassword: forgotPasswordReducer,\r\n    cart: cartReducer,\r\n    newOrder: newOrderReducer,\r\n    myOrders: myOrdersReducer,\r\n    allOrders: allOrdersReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    order: orderReducer,\r\n    newReview: newReviewReducer\r\n})\r\n\r\n\r\nlet initialState = {\r\n    cart: {\r\n        cartItems: localStorage.getItem('cartItems')\r\n            ? JSON.parse(localStorage.getItem('cartItems'))\r\n            : [],\r\n        shippingInfo: localStorage.getItem('shippingInfo')\r\n            ? JSON.parse(localStorage.getItem('shippingInfo'))\r\n            : {}\r\n    }\r\n}\r\n\r\nconst middlware = [thunk];\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlware)))\r\n\r\nexport default store;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { createStore, combineReducers, applyMiddleware } from 'redux';\r\n// import thunk from 'redux-thunk';\r\n// import { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\n// import { productsReducer, productDetailsReducer } from './reducers/productReducers';\r\n\r\n// const reducer = combineReducers({\r\n//     products: productsReducer,\r\n//     productDetails: productDetailsReducer\r\n// })\r\n\r\n// let initialState = {\r\n\r\n// }\r\n\r\n// const middleware = [thunk];\r\n// const store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n// export default store;\r\n","import {\r\n    ALL_PRODUCTS_REQUEST,\r\n    ALL_PRODUCTS_SUCCESS,\r\n    ALL_PRODUCTS_FAIL,\r\n    ADMIN_PRODUCTS_REQUEST,\r\n    ADMIN_PRODUCTS_SUCCESS,\r\n    ADMIN_PRODUCTS_FAIL,\r\n    NEW_PRODUCT_REQUEST,\r\n    NEW_PRODUCT_SUCCESS,\r\n    NEW_PRODUCT_RESET,\r\n    NEW_PRODUCT_FAIL,\r\n    DELETE_PRODUCT_REQUEST,\r\n    DELETE_PRODUCT_SUCCESS,\r\n    DELETE_PRODUCT_RESET,\r\n    DELETE_PRODUCT_FAIL,\r\n    UPDATE_PRODUCT_REQUEST,\r\n    UPDATE_PRODUCT_SUCCESS,\r\n    UPDATE_PRODUCT_RESET,\r\n    UPDATE_PRODUCT_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    NEW_REVIEW_REQUEST,\r\n    NEW_REVIEW_SUCCESS,\r\n    NEW_REVIEW_RESET,\r\n    NEW_REVIEW_FAIL,\r\n    GET_REVIEWS_REQUEST,\r\n    GET_REVIEWS_SUCCESS,\r\n    GET_REVIEWS_FAIL,\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_RESET,\r\n    DELETE_REVIEW_FAIL,\r\n    CLEAR_ERRORS\r\n\r\n} from '../constants/productConstants'\r\n\r\nexport const productsReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case ALL_PRODUCTS_REQUEST:\r\n        case ADMIN_PRODUCTS_REQUEST:\r\n            return {\r\n                loading: true,\r\n                products: []\r\n            }\r\n\r\n        case ALL_PRODUCTS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                productsCount: action.payload.productsCount,\r\n                resPerPage: action.payload.resPerPage,\r\n                filteredProductsCount: action.payload.filteredProductsCount\r\n            }\r\n\r\n        case ADMIN_PRODUCTS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload\r\n            }\r\n\r\n        case ALL_PRODUCTS_FAIL:\r\n        case ADMIN_PRODUCTS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const newProductReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case NEW_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case NEW_PRODUCT_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: action.payload.success,\r\n                product: action.payload.product\r\n            }\r\n\r\n        case NEW_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case NEW_PRODUCT_RESET:\r\n            return {\r\n                ...state,\r\n                success: false\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case DELETE_PRODUCT_REQUEST:\r\n        case UPDATE_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case DELETE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isDeleted: action.payload\r\n            }\r\n\r\n        case UPDATE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isUpdated: action.payload\r\n            }\r\n\r\n\r\n        case DELETE_PRODUCT_FAIL:\r\n        case UPDATE_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case DELETE_PRODUCT_RESET:\r\n            return {\r\n                ...state,\r\n                isDeleted: false\r\n            }\r\n\r\n        case UPDATE_PRODUCT_RESET:\r\n            return {\r\n                ...state,\r\n                isUpdated: false\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                product: action.payload\r\n            }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const newReviewReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case NEW_REVIEW_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case NEW_REVIEW_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: action.payload\r\n            }\r\n\r\n        case NEW_REVIEW_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case NEW_REVIEW_RESET:\r\n            return {\r\n                ...state,\r\n                success: false\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewsReducer = (state = { review: [] }, action) => {\r\n    switch (action.type) {\r\n\r\n        case GET_REVIEWS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case GET_REVIEWS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                reviews: action.payload\r\n            }\r\n\r\n        case GET_REVIEWS_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const reviewReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case DELETE_REVIEW_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case DELETE_REVIEW_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isDeleted: action.payload\r\n            }\r\n\r\n        case DELETE_REVIEW_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case DELETE_REVIEW_RESET:\r\n            return {\r\n                ...state,\r\n                isDeleted: false\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { \r\n//     ALL_PRODUCTS_REQUEST, \r\n//     ALL_PRODUCTS_SUCCESS, \r\n//     ALL_PRODUCTS_FAIL,\r\n//     PRODUCT_DETAILS_REQUEST,\r\n//     PRODUCT_DETAILS_SUCCESS,\r\n//     PRODUCT_DETAILS_FAIL,    \r\n//     CLEAR_ERRORS\r\n//  } from '../constants/productsConstants'\r\n\r\n\r\n// export const productsReducer = (state= { products:[] }, action) => {\r\n//     switch(action.type) {\r\n\r\n//         case ALL_PRODUCTS_REQUEST:\r\n//             return {\r\n//                 loading:true,\r\n//                 products:[]\r\n//             }\r\n//         case ALL_PRODUCTS_SUCCESS:\r\n//             return {\r\n//                 loading:false,\r\n//                 products: action.payload.products,\r\n//                 productsCount: action.payload.productsCount,\r\n//                 resPerPage: action.payload.resPerPage,\r\n//                 filteredProductsCount: action.payload.filteredProductsCount,\r\n//             }\r\n//         case ALL_PRODUCTS_FAIL:\r\n//             return {\r\n//                 loading:false,\r\n//                 eroor: action.payload\r\n//             }\r\n//         case CLEAR_ERRORS:\r\n//             return {\r\n//                 ...state,\r\n//                 error:null\r\n//             }\r\n\r\n\r\n//         default:\r\n//             return state;\r\n//     }\r\n// } \r\n\r\n// export const productDetailsReducer = (state = {product : {} }, action ) => {\r\n//     switch(action.type) {\r\n\r\n//         case PRODUCT_DETAILS_REQUEST:\r\n//             return{\r\n//                 ...state,\r\n//                 loading:true\r\n//             }\r\n//             case PRODUCT_DETAILS_SUCCESS:\r\n//             return{\r\n//                 loading:false,\r\n//                 product: action.payload\r\n//             }\r\n//             case PRODUCT_DETAILS_FAIL:\r\n//             return{\r\n//                 ...state,\r\n//                 error: action.payload\r\n//             }\r\n//             case CLEAR_ERRORS:\r\n//             return {\r\n//                 ...state,\r\n//                 error:null\r\n//             }\r\n\r\n\r\n\r\n//         default:\r\n//             return state\r\n//     }\r\n// }","import {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAIL,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAIL,\r\n    UPDATE_PASSWORD_REQUEST,\r\n    UPDATE_PASSWORD_SUCCESS,\r\n    UPDATE_PASSWORD_RESET,\r\n    UPDATE_PASSWORD_FAIL,\r\n    UPDATE_PROFILE_REQUEST,\r\n    UPDATE_PROFILE_SUCCESS,\r\n    UPDATE_PROFILE_RESET,\r\n    UPDATE_PROFILE_FAIL,\r\n    FORGOT_PASSWORD_REQUEST,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_FAIL,\r\n    NEW_PASSWORD_REQUEST,\r\n    NEW_PASSWORD_SUCCESS,\r\n    NEW_PASSWORD_FAIL,\r\n    ALL_USERS_REQUEST,\r\n    ALL_USERS_SUCCESS,\r\n    ALL_USERS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    UPDATE_USER_REQUEST,\r\n    UPDATE_USER_SUCCESS,\r\n    UPDATE_USER_RESET,\r\n    UPDATE_USER_FAIL,\r\n    DELETE_USER_REQUEST,\r\n    DELETE_USER_SUCCESS,\r\n    DELETE_USER_RESET,\r\n    DELETE_USER_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/userConstants'\r\n\r\nexport const authReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case LOGIN_REQUEST:\r\n        case REGISTER_USER_REQUEST:\r\n        case LOAD_USER_REQUEST:\r\n            return {\r\n                loading: true,\r\n                isAuthenticated: false,\r\n            }\r\n\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_USER_SUCCESS:\r\n        case LOAD_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isAuthenticated: true,\r\n                user: action.payload\r\n            }\r\n\r\n        case LOGOUT_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n\r\n        case LOAD_USER_FAIL:\r\n            return {\r\n                loading: false,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                error: action.payload\r\n            }\r\n\r\n        case LOGOUT_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case LOGIN_FAIL:\r\n        case REGISTER_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case UPDATE_PROFILE_REQUEST:\r\n        case UPDATE_PASSWORD_REQUEST:\r\n        case UPDATE_USER_REQUEST:\r\n        case DELETE_USER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case UPDATE_PROFILE_SUCCESS:\r\n        case UPDATE_PASSWORD_SUCCESS:\r\n        case UPDATE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isUpdated: action.payload\r\n            }\r\n\r\n        case DELETE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isDeleted: action.payload\r\n            }\r\n\r\n        case UPDATE_PROFILE_RESET:\r\n        case UPDATE_PASSWORD_RESET:\r\n        case UPDATE_USER_RESET:\r\n            return {\r\n                ...state,\r\n                isUpdated: false\r\n            }\r\n\r\n        case DELETE_USER_RESET:\r\n            return {\r\n                ...state,\r\n                isDeleted: false\r\n            }\r\n\r\n        case UPDATE_PROFILE_FAIL:\r\n        case UPDATE_PASSWORD_FAIL:\r\n        case UPDATE_USER_FAIL:\r\n        case DELETE_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const forgotPasswordReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case FORGOT_PASSWORD_REQUEST:\r\n        case NEW_PASSWORD_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null\r\n            }\r\n\r\n        case FORGOT_PASSWORD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: action.payload\r\n            }\r\n\r\n        case NEW_PASSWORD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                success: action.payload\r\n            }\r\n\r\n        case FORGOT_PASSWORD_FAIL:\r\n        case NEW_PASSWORD_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const allUsersReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n\r\n        case ALL_USERS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n\r\n        case ALL_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                users: action.payload\r\n            }\r\n\r\n        case ALL_USERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case USER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: action.payload\r\n            }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { ADD_TO_CART, REMOVE_ITEM_CART, SAVE_SHIPPING_INFO } from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingInfo: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_TO_CART:\r\n            const item = action.payload;\r\n\r\n            const isItemExist = state.cartItems.find(i => i.product === item.product)\r\n\r\n            if (isItemExist) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(i => i.product === isItemExist.product ? item : i)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case REMOVE_ITEM_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(i => i.product !== action.payload)\r\n            }\r\n\r\n\r\n        case SAVE_SHIPPING_INFO:\r\n            return {\r\n                ...state,\r\n                shippingInfo: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    CREATE_ORDER_REQUEST,\r\n    CREATE_ORDER_SUCCESS,\r\n    CREATE_ORDER_FAIL,\r\n    MY_ORDERS_REQUEST,\r\n    MY_ORDERS_SUCCESS,\r\n    MY_ORDERS_FAIL,\r\n    ALL_ORDERS_REQUEST,\r\n    ALL_ORDERS_SUCCESS,\r\n    ALL_ORDERS_FAIL,\r\n    UPDATE_ORDER_REQUEST,\r\n    UPDATE_ORDER_SUCCESS,\r\n    UPDATE_ORDER_RESET,\r\n    UPDATE_ORDER_FAIL,\r\n    DELETE_ORDER_REQUEST,\r\n    DELETE_ORDER_SUCCESS,\r\n    DELETE_ORDER_RESET,\r\n    DELETE_ORDER_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/orderConstants'\r\n\r\nexport const newOrderReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case CREATE_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case CREATE_ORDER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case CREATE_ORDER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const myOrdersReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n\r\n        case MY_ORDERS_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case MY_ORDERS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case MY_ORDERS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { order: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const allOrdersReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n\r\n        case ALL_ORDERS_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ALL_ORDERS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload.orders,\r\n                totalAmount: action.payload.totalAmount\r\n            }\r\n\r\n        case ALL_ORDERS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const orderReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case UPDATE_ORDER_REQUEST:\r\n        case DELETE_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case UPDATE_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isUpdated: action.payload\r\n            }\r\n\r\n        case DELETE_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isDeleted: action.payload\r\n            }\r\n\r\n        case UPDATE_ORDER_FAIL:\r\n        case DELETE_ORDER_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case UPDATE_ORDER_RESET:\r\n            return {\r\n                ...state,\r\n                isUpdated: false\r\n            }\r\n\r\n        case DELETE_ORDER_RESET:\r\n            return {\r\n                ...state,\r\n                isDeleted: false\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nimport Header from './components/layout/Header'\r\nimport Footer from './components/layout/Footer'\r\n\r\nimport Home from './components/Home'\r\nimport ProductDetails from './components/product/ProductDetails'\r\n\r\n// Cart Imports\r\nimport Cart from './components/cart/Cart'\r\nimport Shipping from './components/cart/Shipping'\r\nimport ConfirmOrder from './components/cart/ConfirmOrder'\r\nimport Payment from './components/cart/Payment'\r\nimport OrderSuccess from './components/cart/OrderSuccess'\r\n\r\n// Order Imports\r\nimport ListOrders from './components/order/ListOrders'\r\nimport OrderDetails from './components/order/OrderDetails'\r\n\r\n// Auth or User imports\r\nimport Login from './components/user/Login'\r\nimport Register from './components/user/Register'\r\nimport Profile from './components/user/Profile'\r\nimport UpdateProfile from './components/user/UpdateProfile'\r\nimport UpdatePassword from './components/user/UpdatePassword'\r\nimport ForgotPassword from './components/user/ForgotPassword'\r\nimport NewPassword from './components/user/NewPassword'\r\n\r\n// Admin Imports\r\nimport Dashboard from './components/admin/Dashboard'\r\nimport ProductsList from './components/admin/ProductsList'\r\nimport NewProduct from './components/admin/NewProduct'\r\nimport UpdateProduct from './components/admin/UpdateProduct'\r\nimport OrdersList from './components/admin/OrdersList'\r\nimport ProcessOrder from './components/admin/ProcessOrder'\r\nimport UsersList from './components/admin/UsersList'\r\nimport UpdateUser from './components/admin/UpdateUser'\r\nimport ProductReviews from './components/admin/ProductReviews'\r\n\r\n\r\nimport ProtectedRoute from './components/route/ProtectedRoute'\r\nimport { loadUser } from './actions/userActions'\r\nimport { useSelector } from 'react-redux'\r\nimport store from './store'\r\nimport axios from 'axios'\r\n\r\n// Payment\r\nimport { Elements } from '@stripe/react-stripe-js'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\n\r\nfunction App() {\r\n\r\n  const [stripeApiKey, setStripeApiKey] = useState('');\r\n\r\n  useEffect(() => {\r\n    store.dispatch(loadUser())\r\n\r\n    async function getStripApiKey() {\r\n      const { data } = await axios.get('/api/v1/stripeapi');\r\n\r\n      setStripeApiKey(data.stripeApiKey)\r\n    }\r\n\r\n    getStripApiKey();\r\n\r\n  }, [])\r\n\r\n  const { user, isAuthenticated, loading } = useSelector(state => state.auth)\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <div className=\"container container-fluid\">\r\n          <Route path=\"/\" component={Home} exact />\r\n          <Route path=\"/search/:keyword\" component={Home} />\r\n          <Route path=\"/product/:id\" component={ProductDetails} exact />\r\n\r\n          <Route path=\"/cart\" component={Cart} exact />\r\n          <ProtectedRoute path=\"/shipping\" component={Shipping} />\r\n          <ProtectedRoute path=\"/confirm\" component={ConfirmOrder} exact />\r\n          <ProtectedRoute path=\"/success\" component={OrderSuccess} />\r\n          {stripeApiKey &&\r\n            <Elements stripe={loadStripe(stripeApiKey)}>\r\n              <ProtectedRoute path=\"/payment\" component={Payment} />\r\n            </Elements>\r\n          }\r\n\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/password/forgot\" component={ForgotPassword} exact />\r\n          <Route path=\"/password/reset/:token\" component={NewPassword} exact />\r\n          <ProtectedRoute path=\"/me\" component={Profile} exact />\r\n          <ProtectedRoute path=\"/me/update\" component={UpdateProfile} exact />\r\n          <ProtectedRoute path=\"/password/update\" component={UpdatePassword} exact />\r\n\r\n          <ProtectedRoute path=\"/orders/me\" component={ListOrders} exact />\r\n          <ProtectedRoute path=\"/order/:id\" component={OrderDetails} exact />\r\n        </div>\r\n\r\n        <ProtectedRoute path=\"/dashboard\" isAdmin={true} component={Dashboard} exact />\r\n        <ProtectedRoute path=\"/admin/products\" isAdmin={true} component={ProductsList} exact />\r\n        <ProtectedRoute path=\"/admin/product\" isAdmin={true} component={NewProduct} exact />\r\n        <ProtectedRoute path=\"/admin/product/:id\" isAdmin={true} component={UpdateProduct} exact />\r\n        <ProtectedRoute path=\"/admin/orders\" isAdmin={true} component={OrdersList} exact />\r\n        <ProtectedRoute path=\"/admin/order/:id\" isAdmin={true} component={ProcessOrder} exact />\r\n        <ProtectedRoute path=\"/admin/users\" isAdmin={true} component={UsersList} exact />\r\n        <ProtectedRoute path=\"/admin/user/:id\" isAdmin={true} component={UpdateUser} exact />\r\n        <ProtectedRoute path=\"/admin/reviews\" isAdmin={true} component={ProductReviews} exact />\r\n\r\n        {!loading && (!isAuthenticated || user.role !== 'admin') && (\r\n          <Footer />\r\n        )}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react'\r\n// import { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\n// import Header from './components/layout/Header'\r\n// import Footer from './components/layout/Footer'\r\n// import Home from './components/Home'\r\n// import ProductDetails from './components/product/ProductDetails'\r\n\r\n// import Login from './components/user/Login'\r\n\r\n// function App() {\r\n//     return (\r\n//         <Router>\r\n//           <div className=\"App\">\r\n//             <Header/>\r\n//             <div className=\"container container-fluid\">\r\n//             <Route path=\"/\" component={Home} exact />\r\n//             <Route path=\"/search/:keyword\" component={Home} />\r\n//             <Route path=\"/PRODUCT/:id\" component={ProductDetails} exact />\r\n\r\n//             <Route path=\"/login\" component={Login}/>\r\n//             </div>\r\n//             <Footer/>\r\n//           </div>\r\n//         </Router>\r\n//     );\r\n// }\r\n\r\n// export default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\n\r\nimport { positions, transitions, Provider as AlertProvider } from 'react-alert';\r\nimport AlertTemplate from 'react-alert-template-basic'\r\n\r\nconst options = {\r\n  timeout: 5000,\r\n  position: positions.BOTTOM_CENTER,\r\n  transition: transitions.SCALE\r\n}\r\n\r\nReactDOM.render(\r\n  <Provider store={store} >\r\n    <AlertProvider template={AlertTemplate} {...options}>\r\n      <App />\r\n    </AlertProvider>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import App from './App';\r\n\r\n// import { Provider } from 'react-redux';\r\n// import store from './store'\r\n\r\n// import { positions, transitions, Provider as AlertProvider } from 'react-alert';\r\n// import AlertTemplate from 'react-alert-template-basic'\r\n\r\n// const options = {\r\n//     timeout: 5000,\r\n//     position: positions.BOTTOM_CENTER,\r\n//     transition: transitions.SCALE\r\n// }\r\n\r\n\r\n// ReactDOM.render(\r\n//     <Provider store={store}>\r\n//         <AlertProvider template={AlertTemplate} {...options}>\r\n//     <App />\r\n//     </AlertProvider>\r\n//     </Provider>,\r\n//     document.getElementById('root')\r\n\r\n// );\r\n\r\n"],"sourceRoot":""}